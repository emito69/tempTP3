{
	"id": "5f149df7a2ce9c0eb9ca7bdcbb3afabd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface MintableERC20 is IERC20 {\r\n    function mint(address to, uint256 amount) external;\r\n}\r\n\r\ncontract SimpleSwap is Ownable {\r\n\r\n    ERC20 public token1;\r\n    ERC20 public token2;\r\n    //uint256 public price;\r\n\r\n       constructor(address _token1, address _token2) Ownable(msg.sender) {\r\n        token1 = ERC20(_token1);\r\n        token2 = ERC20(_token2);\r\n       }        \r\n\r\n\r\n\r\n\r\n/**** FUNCIONES EXTERNAS ****/\r\n\r\n    // 1\r\n    function addLiquidityaddLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, \r\n                                      uint amountAMin, uint amountBMin, address to, uint deadline) external \r\n                                returns (uint amountA, uint amountB, uint liquidity){\r\n        \r\n    \r\n    }\r\n\r\n\r\n    // 2\r\n    function removeLiquidity(address tokenA, address tokenB, uint liquidity, \r\n                             uint amountAMin, uint amountBMin, address to, uint deadline) external \r\n                        returns (uint amountA, uint amountB){\r\n\r\n    \r\n    }\r\n\r\n\r\n    // 3\r\n    function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external \r\n                                returns (uint[] memory amounts){\r\n\r\n\r\n    }\r\n\r\n\r\n    // 4\r\n    function getPrice(address tokenA, address tokenB) external view \r\n                returns (uint price){\r\n            //return price;\r\n    }\r\n\r\n\r\n    // 5\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure \r\n                    returns (uint amountOut){\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleSwap.sol": {
				"MintableERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"MintableERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0x22a01621113d8cbb9190918b8da5e05bf01cecfee2cf82d4a193e5a6c9d92655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb5f707963593a6c7042b5f9bbb9978f1e8480217732df53a153ce7bea978335\",\"dweb:/ipfs/QmaUjMM34C5XFzcnr8o7AvkPGHe5gAfr8AeSUBBJ1htW4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token2",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityaddLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token2",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleSwap.sol\":344:1839  contract SimpleSwap is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleSwap.sol\":470:615  constructor(address _token1, address _token2) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleSwap.sol\":524:534  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/SimpleSwap.sol\":562:569  _token1 */\n  dup2\n    /* \"contracts/SimpleSwap.sol\":547:553  token1 */\n  0x01\n  0x00\n    /* \"contracts/SimpleSwap.sol\":547:570  token1 = ERC20(_token1) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleSwap.sol\":596:603  _token2 */\n  dup1\n    /* \"contracts/SimpleSwap.sol\":581:587  token2 */\n  0x02\n  0x00\n    /* \"contracts/SimpleSwap.sol\":581:604  token2 = ERC20(_token2) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleSwap.sol\":470:615  constructor(address _token1, address _token2) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/SimpleSwap.sol\":344:1839  contract SimpleSwap is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SimpleSwap.sol\":344:1839  contract SimpleSwap is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleSwap.sol\":344:1839  contract SimpleSwap is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xac41865a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbaa2abde\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x054d50d4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x25be124e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38ed1739\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3de2d681\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/SimpleSwap.sol\":1686:1826  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure ... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":410:429  ERC20 public token2 */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":1301:1507  function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external ... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":681:1009  function addLiquidityaddLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, ... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":1527:1666  function getPrice(address tokenA, address tokenB) external view ... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":1029:1281  function removeLiquidity(address tokenA, address tokenB, uint liquidity, ... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":384:403  ERC20 public token1 */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/SimpleSwap.sol\":1686:1826  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure ... */\n    tag_17:\n        /* \"contracts/SimpleSwap.sol\":1801:1815  uint amountOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1686:1826  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure ... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":410:429  ERC20 public token2 */\n    tag_21:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":1301:1507  function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external ... */\n    tag_27:\n        /* \"contracts/SimpleSwap.sol\":1473:1494  uint[] memory amounts */\n      0x60\n        /* \"contracts/SimpleSwap.sol\":1301:1507  function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external ... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":681:1009  function addLiquidityaddLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, ... */\n    tag_33:\n        /* \"contracts/SimpleSwap.sol\":942:954  uint amountA */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":956:968  uint amountB */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":970:984  uint liquidity */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":681:1009  function addLiquidityaddLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, ... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":1527:1666  function getPrice(address tokenA, address tokenB) external view ... */\n    tag_45:\n        /* \"contracts/SimpleSwap.sol\":1618:1628  uint price */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1527:1666  function getPrice(address tokenA, address tokenB) external view ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":1029:1281  function removeLiquidity(address tokenA, address tokenB, uint liquidity, ... */\n    tag_50:\n        /* \"contracts/SimpleSwap.sol\":1238:1250  uint amountA */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1252:1264  uint amountB */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1029:1281  function removeLiquidity(address tokenA, address tokenB, uint liquidity, ... */\n      swap8\n      pop\n      swap8\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":384:403  ERC20 public token1 */\n    tag_54:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_75\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_82\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_88:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_89:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_90:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_91:\n        /* \"#utility.yul\":490:514   */\n      tag_121\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_90\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_122:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_92:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_124\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_91\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_16:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_127\n      tag_88\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":800:919   */\n    tag_126:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_128\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_92\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_129\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_92\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_130\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_92\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1433   */\n    tag_93:\n        /* \"#utility.yul\":1402:1426   */\n      tag_132\n        /* \"#utility.yul\":1420:1425   */\n      dup2\n        /* \"#utility.yul\":1402:1426   */\n      tag_90\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1397:1400   */\n      dup3\n        /* \"#utility.yul\":1390:1427   */\n      mstore\n        /* \"#utility.yul\":1315:1433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1661   */\n    tag_19:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_134\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup5\n        /* \"#utility.yul\":1583:1654   */\n      tag_93\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1439:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1793   */\n    tag_94:\n        /* \"#utility.yul\":1704:1711   */\n      0x00\n        /* \"#utility.yul\":1744:1786   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1737:1742   */\n      dup3\n        /* \"#utility.yul\":1733:1787   */\n      and\n        /* \"#utility.yul\":1722:1787   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1799:1859   */\n    tag_95:\n        /* \"#utility.yul\":1827:1830   */\n      0x00\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1841:1853   */\n      swap1\n      pop\n        /* \"#utility.yul\":1799:1859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:2007   */\n    tag_96:\n        /* \"#utility.yul\":1915:1924   */\n      0x00\n        /* \"#utility.yul\":1948:2001   */\n      tag_138\n        /* \"#utility.yul\":1966:2000   */\n      tag_139\n        /* \"#utility.yul\":1975:1999   */\n      tag_140\n        /* \"#utility.yul\":1993:1998   */\n      dup5\n        /* \"#utility.yul\":1975:1999   */\n      tag_94\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1966:2000   */\n      tag_95\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1948:2001   */\n      tag_94\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1935:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":1865:2007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2013:2139   */\n    tag_97:\n        /* \"#utility.yul\":2063:2072   */\n      0x00\n        /* \"#utility.yul\":2096:2133   */\n      tag_142\n        /* \"#utility.yul\":2127:2132   */\n      dup3\n        /* \"#utility.yul\":2096:2133   */\n      tag_96\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2083:2133   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2145:2284   */\n    tag_98:\n        /* \"#utility.yul\":2208:2217   */\n      0x00\n        /* \"#utility.yul\":2241:2278   */\n      tag_144\n        /* \"#utility.yul\":2272:2277   */\n      dup3\n        /* \"#utility.yul\":2241:2278   */\n      tag_97\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2228:2278   */\n      swap1\n      pop\n        /* \"#utility.yul\":2145:2284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2290:2447   */\n    tag_99:\n        /* \"#utility.yul\":2390:2440   */\n      tag_146\n        /* \"#utility.yul\":2434:2439   */\n      dup2\n        /* \"#utility.yul\":2390:2440   */\n      tag_98\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2385:2388   */\n      dup3\n        /* \"#utility.yul\":2378:2441   */\n      mstore\n        /* \"#utility.yul\":2290:2447   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2701   */\n    tag_23:\n        /* \"#utility.yul\":2559:2563   */\n      0x00\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2586:2595   */\n      dup3\n        /* \"#utility.yul\":2582:2600   */\n      add\n        /* \"#utility.yul\":2574:2600   */\n      swap1\n      pop\n        /* \"#utility.yul\":2610:2694   */\n      tag_148\n        /* \"#utility.yul\":2691:2692   */\n      0x00\n        /* \"#utility.yul\":2680:2689   */\n      dup4\n        /* \"#utility.yul\":2676:2693   */\n      add\n        /* \"#utility.yul\":2667:2673   */\n      dup5\n        /* \"#utility.yul\":2610:2694   */\n      tag_99\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2453:2701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2707:2824   */\n    tag_100:\n        /* \"#utility.yul\":2816:2817   */\n      0x00\n        /* \"#utility.yul\":2813:2814   */\n      0x00\n        /* \"#utility.yul\":2806:2818   */\n      revert\n        /* \"#utility.yul\":2830:2947   */\n    tag_101:\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2936:2937   */\n      0x00\n        /* \"#utility.yul\":2929:2941   */\n      revert\n        /* \"#utility.yul\":2953:3070   */\n    tag_102:\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3059:3060   */\n      0x00\n        /* \"#utility.yul\":3052:3064   */\n      revert\n        /* \"#utility.yul\":3093:3661   */\n    tag_103:\n        /* \"#utility.yul\":3166:3174   */\n      0x00\n        /* \"#utility.yul\":3176:3182   */\n      0x00\n        /* \"#utility.yul\":3226:3229   */\n      dup4\n        /* \"#utility.yul\":3219:3223   */\n      0x1f\n        /* \"#utility.yul\":3211:3217   */\n      dup5\n        /* \"#utility.yul\":3207:3224   */\n      add\n        /* \"#utility.yul\":3203:3230   */\n      slt\n        /* \"#utility.yul\":3193:3315   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3234:3313   */\n      tag_154\n      tag_100\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3193:3315   */\n    tag_153:\n        /* \"#utility.yul\":3347:3353   */\n      dup3\n        /* \"#utility.yul\":3334:3354   */\n      calldataload\n        /* \"#utility.yul\":3324:3354   */\n      swap1\n      pop\n        /* \"#utility.yul\":3377:3395   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3369:3375   */\n      dup2\n        /* \"#utility.yul\":3366:3396   */\n      gt\n        /* \"#utility.yul\":3363:3480   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":3399:3478   */\n      tag_156\n      tag_101\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3363:3480   */\n    tag_155:\n        /* \"#utility.yul\":3513:3517   */\n      0x20\n        /* \"#utility.yul\":3505:3511   */\n      dup4\n        /* \"#utility.yul\":3501:3518   */\n      add\n        /* \"#utility.yul\":3489:3518   */\n      swap2\n      pop\n        /* \"#utility.yul\":3567:3570   */\n      dup4\n        /* \"#utility.yul\":3559:3563   */\n      0x20\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3547:3564   */\n      mul\n        /* \"#utility.yul\":3537:3545   */\n      dup4\n        /* \"#utility.yul\":3533:3565   */\n      add\n        /* \"#utility.yul\":3530:3571   */\n      gt\n        /* \"#utility.yul\":3527:3655   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":3574:3653   */\n      tag_158\n      tag_102\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3527:3655   */\n    tag_157:\n        /* \"#utility.yul\":3093:3661   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3667:3763   */\n    tag_104:\n        /* \"#utility.yul\":3704:3711   */\n      0x00\n        /* \"#utility.yul\":3733:3757   */\n      tag_160\n        /* \"#utility.yul\":3751:3756   */\n      dup3\n        /* \"#utility.yul\":3733:3757   */\n      tag_94\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3722:3757   */\n      swap1\n      pop\n        /* \"#utility.yul\":3667:3763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3769:3891   */\n    tag_105:\n        /* \"#utility.yul\":3842:3866   */\n      tag_162\n        /* \"#utility.yul\":3860:3865   */\n      dup2\n        /* \"#utility.yul\":3842:3866   */\n      tag_104\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3835:3840   */\n      dup2\n        /* \"#utility.yul\":3832:3867   */\n      eq\n        /* \"#utility.yul\":3822:3885   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":3881:3882   */\n      0x00\n        /* \"#utility.yul\":3878:3879   */\n      0x00\n        /* \"#utility.yul\":3871:3883   */\n      revert\n        /* \"#utility.yul\":3822:3885   */\n    tag_163:\n        /* \"#utility.yul\":3769:3891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:4036   */\n    tag_106:\n        /* \"#utility.yul\":3943:3948   */\n      0x00\n        /* \"#utility.yul\":3981:3987   */\n      dup2\n        /* \"#utility.yul\":3968:3988   */\n      calldataload\n        /* \"#utility.yul\":3959:3988   */\n      swap1\n      pop\n        /* \"#utility.yul\":3997:4030   */\n      tag_165\n        /* \"#utility.yul\":4024:4029   */\n      dup2\n        /* \"#utility.yul\":3997:4030   */\n      tag_105\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3897:4036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4042:5183   */\n    tag_26:\n        /* \"#utility.yul\":4164:4170   */\n      0x00\n        /* \"#utility.yul\":4172:4178   */\n      0x00\n        /* \"#utility.yul\":4180:4186   */\n      0x00\n        /* \"#utility.yul\":4188:4194   */\n      0x00\n        /* \"#utility.yul\":4196:4202   */\n      0x00\n        /* \"#utility.yul\":4204:4210   */\n      0x00\n        /* \"#utility.yul\":4253:4256   */\n      0xa0\n        /* \"#utility.yul\":4241:4250   */\n      dup8\n        /* \"#utility.yul\":4232:4239   */\n      dup10\n        /* \"#utility.yul\":4228:4251   */\n      sub\n        /* \"#utility.yul\":4224:4257   */\n      slt\n        /* \"#utility.yul\":4221:4341   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":4260:4339   */\n      tag_168\n      tag_88\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4221:4341   */\n    tag_167:\n        /* \"#utility.yul\":4380:4381   */\n      0x00\n        /* \"#utility.yul\":4405:4458   */\n      tag_169\n        /* \"#utility.yul\":4450:4457   */\n      dup10\n        /* \"#utility.yul\":4441:4447   */\n      dup3\n        /* \"#utility.yul\":4430:4439   */\n      dup11\n        /* \"#utility.yul\":4426:4448   */\n      add\n        /* \"#utility.yul\":4405:4458   */\n      tag_92\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4395:4458   */\n      swap7\n      pop\n        /* \"#utility.yul\":4351:4468   */\n      pop\n        /* \"#utility.yul\":4507:4509   */\n      0x20\n        /* \"#utility.yul\":4533:4586   */\n      tag_170\n        /* \"#utility.yul\":4578:4585   */\n      dup10\n        /* \"#utility.yul\":4569:4575   */\n      dup3\n        /* \"#utility.yul\":4558:4567   */\n      dup11\n        /* \"#utility.yul\":4554:4576   */\n      add\n        /* \"#utility.yul\":4533:4586   */\n      tag_92\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4523:4586   */\n      swap6\n      pop\n        /* \"#utility.yul\":4478:4596   */\n      pop\n        /* \"#utility.yul\":4663:4665   */\n      0x40\n        /* \"#utility.yul\":4652:4661   */\n      dup8\n        /* \"#utility.yul\":4648:4666   */\n      add\n        /* \"#utility.yul\":4635:4667   */\n      calldataload\n        /* \"#utility.yul\":4694:4712   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4686:4692   */\n      dup2\n        /* \"#utility.yul\":4683:4713   */\n      gt\n        /* \"#utility.yul\":4680:4797   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":4716:4795   */\n      tag_172\n      tag_89\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4680:4797   */\n    tag_171:\n        /* \"#utility.yul\":4829:4909   */\n      tag_173\n        /* \"#utility.yul\":4901:4908   */\n      dup10\n        /* \"#utility.yul\":4892:4898   */\n      dup3\n        /* \"#utility.yul\":4881:4890   */\n      dup11\n        /* \"#utility.yul\":4877:4899   */\n      add\n        /* \"#utility.yul\":4829:4909   */\n      tag_103\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4811:4909   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":4606:4919   */\n      pop\n        /* \"#utility.yul\":4958:4960   */\n      0x60\n        /* \"#utility.yul\":4984:5037   */\n      tag_174\n        /* \"#utility.yul\":5029:5036   */\n      dup10\n        /* \"#utility.yul\":5020:5026   */\n      dup3\n        /* \"#utility.yul\":5009:5018   */\n      dup11\n        /* \"#utility.yul\":5005:5027   */\n      add\n        /* \"#utility.yul\":4984:5037   */\n      tag_106\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4974:5037   */\n      swap3\n      pop\n        /* \"#utility.yul\":4929:5047   */\n      pop\n        /* \"#utility.yul\":5086:5089   */\n      0x80\n        /* \"#utility.yul\":5113:5166   */\n      tag_175\n        /* \"#utility.yul\":5158:5165   */\n      dup10\n        /* \"#utility.yul\":5149:5155   */\n      dup3\n        /* \"#utility.yul\":5138:5147   */\n      dup11\n        /* \"#utility.yul\":5134:5156   */\n      add\n        /* \"#utility.yul\":5113:5166   */\n      tag_92\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5103:5166   */\n      swap2\n      pop\n        /* \"#utility.yul\":5057:5176   */\n      pop\n        /* \"#utility.yul\":4042:5183   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":5189:5303   */\n    tag_107:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5290:5295   */\n      dup2\n        /* \"#utility.yul\":5284:5296   */\n      mload\n        /* \"#utility.yul\":5274:5296   */\n      swap1\n      pop\n        /* \"#utility.yul\":5189:5303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5493   */\n    tag_108:\n        /* \"#utility.yul\":5408:5419   */\n      0x00\n        /* \"#utility.yul\":5442:5448   */\n      dup3\n        /* \"#utility.yul\":5437:5440   */\n      dup3\n        /* \"#utility.yul\":5430:5449   */\n      mstore\n        /* \"#utility.yul\":5482:5486   */\n      0x20\n        /* \"#utility.yul\":5477:5480   */\n      dup3\n        /* \"#utility.yul\":5473:5487   */\n      add\n        /* \"#utility.yul\":5458:5487   */\n      swap1\n      pop\n        /* \"#utility.yul\":5309:5493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5499:5631   */\n    tag_109:\n        /* \"#utility.yul\":5566:5570   */\n      0x00\n        /* \"#utility.yul\":5589:5592   */\n      dup2\n        /* \"#utility.yul\":5581:5592   */\n      swap1\n      pop\n        /* \"#utility.yul\":5619:5623   */\n      0x20\n        /* \"#utility.yul\":5614:5617   */\n      dup3\n        /* \"#utility.yul\":5610:5624   */\n      add\n        /* \"#utility.yul\":5602:5624   */\n      swap1\n      pop\n        /* \"#utility.yul\":5499:5631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5637:5745   */\n    tag_110:\n        /* \"#utility.yul\":5714:5738   */\n      tag_180\n        /* \"#utility.yul\":5732:5737   */\n      dup2\n        /* \"#utility.yul\":5714:5738   */\n      tag_90\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5709:5712   */\n      dup3\n        /* \"#utility.yul\":5702:5739   */\n      mstore\n        /* \"#utility.yul\":5637:5745   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5751:5930   */\n    tag_111:\n        /* \"#utility.yul\":5820:5830   */\n      0x00\n        /* \"#utility.yul\":5841:5887   */\n      tag_182\n        /* \"#utility.yul\":5883:5886   */\n      dup4\n        /* \"#utility.yul\":5875:5881   */\n      dup4\n        /* \"#utility.yul\":5841:5887   */\n      tag_110\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5919:5923   */\n      0x20\n        /* \"#utility.yul\":5914:5917   */\n      dup4\n        /* \"#utility.yul\":5910:5924   */\n      add\n        /* \"#utility.yul\":5896:5924   */\n      swap1\n      pop\n        /* \"#utility.yul\":5751:5930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5936:6049   */\n    tag_112:\n        /* \"#utility.yul\":6006:6010   */\n      0x00\n        /* \"#utility.yul\":6038:6042   */\n      0x20\n        /* \"#utility.yul\":6033:6036   */\n      dup3\n        /* \"#utility.yul\":6029:6043   */\n      add\n        /* \"#utility.yul\":6021:6043   */\n      swap1\n      pop\n        /* \"#utility.yul\":5936:6049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6085:6817   */\n    tag_113:\n        /* \"#utility.yul\":6204:6207   */\n      0x00\n        /* \"#utility.yul\":6233:6287   */\n      tag_185\n        /* \"#utility.yul\":6281:6286   */\n      dup3\n        /* \"#utility.yul\":6233:6287   */\n      tag_107\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6303:6389   */\n      tag_186\n        /* \"#utility.yul\":6382:6388   */\n      dup2\n        /* \"#utility.yul\":6377:6380   */\n      dup6\n        /* \"#utility.yul\":6303:6389   */\n      tag_108\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6296:6389   */\n      swap4\n      pop\n        /* \"#utility.yul\":6413:6469   */\n      tag_187\n        /* \"#utility.yul\":6463:6468   */\n      dup4\n        /* \"#utility.yul\":6413:6469   */\n      tag_109\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6492:6499   */\n      dup1\n        /* \"#utility.yul\":6523:6524   */\n      0x00\n        /* \"#utility.yul\":6508:6792   */\n    tag_188:\n        /* \"#utility.yul\":6533:6539   */\n      dup4\n        /* \"#utility.yul\":6530:6531   */\n      dup2\n        /* \"#utility.yul\":6527:6540   */\n      lt\n        /* \"#utility.yul\":6508:6792   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":6609:6615   */\n      dup2\n        /* \"#utility.yul\":6603:6616   */\n      mload\n        /* \"#utility.yul\":6636:6699   */\n      tag_191\n        /* \"#utility.yul\":6695:6698   */\n      dup9\n        /* \"#utility.yul\":6680:6693   */\n      dup3\n        /* \"#utility.yul\":6636:6699   */\n      tag_111\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6629:6699   */\n      swap8\n      pop\n        /* \"#utility.yul\":6722:6782   */\n      tag_192\n        /* \"#utility.yul\":6775:6781   */\n      dup4\n        /* \"#utility.yul\":6722:6782   */\n      tag_112\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6712:6782   */\n      swap3\n      pop\n        /* \"#utility.yul\":6568:6792   */\n      pop\n        /* \"#utility.yul\":6555:6556   */\n      0x01\n        /* \"#utility.yul\":6552:6553   */\n      dup2\n        /* \"#utility.yul\":6548:6557   */\n      add\n        /* \"#utility.yul\":6543:6557   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6792   */\n      jump(tag_188)\n    tag_190:\n        /* \"#utility.yul\":6512:6526   */\n      pop\n        /* \"#utility.yul\":6808:6811   */\n      dup6\n        /* \"#utility.yul\":6801:6811   */\n      swap4\n      pop\n        /* \"#utility.yul\":6209:6817   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6085:6817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6823:7196   */\n    tag_29:\n        /* \"#utility.yul\":6966:6970   */\n      0x00\n        /* \"#utility.yul\":7004:7006   */\n      0x20\n        /* \"#utility.yul\":6993:7002   */\n      dup3\n        /* \"#utility.yul\":6989:7007   */\n      add\n        /* \"#utility.yul\":6981:7007   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7062   */\n      dup2\n        /* \"#utility.yul\":7047:7051   */\n      dup2\n        /* \"#utility.yul\":7043:7063   */\n      sub\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7028:7037   */\n      dup4\n        /* \"#utility.yul\":7024:7041   */\n      add\n        /* \"#utility.yul\":7017:7064   */\n      mstore\n        /* \"#utility.yul\":7081:7189   */\n      tag_194\n        /* \"#utility.yul\":7184:7188   */\n      dup2\n        /* \"#utility.yul\":7175:7181   */\n      dup5\n        /* \"#utility.yul\":7081:7189   */\n      tag_113\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7073:7189   */\n      swap1\n      pop\n        /* \"#utility.yul\":6823:7196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7202:8551   */\n    tag_32:\n        /* \"#utility.yul\":7324:7330   */\n      0x00\n        /* \"#utility.yul\":7332:7338   */\n      0x00\n        /* \"#utility.yul\":7340:7346   */\n      0x00\n        /* \"#utility.yul\":7348:7354   */\n      0x00\n        /* \"#utility.yul\":7356:7362   */\n      0x00\n        /* \"#utility.yul\":7364:7370   */\n      0x00\n        /* \"#utility.yul\":7372:7378   */\n      0x00\n        /* \"#utility.yul\":7380:7386   */\n      0x00\n        /* \"#utility.yul\":7429:7432   */\n      0x0100\n        /* \"#utility.yul\":7417:7426   */\n      dup10\n        /* \"#utility.yul\":7408:7415   */\n      dup12\n        /* \"#utility.yul\":7404:7427   */\n      sub\n        /* \"#utility.yul\":7400:7433   */\n      slt\n        /* \"#utility.yul\":7397:7517   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":7436:7515   */\n      tag_197\n      tag_88\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7397:7517   */\n    tag_196:\n        /* \"#utility.yul\":7556:7557   */\n      0x00\n        /* \"#utility.yul\":7581:7634   */\n      tag_198\n        /* \"#utility.yul\":7626:7633   */\n      dup12\n        /* \"#utility.yul\":7617:7623   */\n      dup3\n        /* \"#utility.yul\":7606:7615   */\n      dup13\n        /* \"#utility.yul\":7602:7624   */\n      add\n        /* \"#utility.yul\":7581:7634   */\n      tag_106\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7571:7634   */\n      swap9\n      pop\n        /* \"#utility.yul\":7527:7644   */\n      pop\n        /* \"#utility.yul\":7683:7685   */\n      0x20\n        /* \"#utility.yul\":7709:7762   */\n      tag_199\n        /* \"#utility.yul\":7754:7761   */\n      dup12\n        /* \"#utility.yul\":7745:7751   */\n      dup3\n        /* \"#utility.yul\":7734:7743   */\n      dup13\n        /* \"#utility.yul\":7730:7752   */\n      add\n        /* \"#utility.yul\":7709:7762   */\n      tag_106\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7699:7762   */\n      swap8\n      pop\n        /* \"#utility.yul\":7654:7772   */\n      pop\n        /* \"#utility.yul\":7811:7813   */\n      0x40\n        /* \"#utility.yul\":7837:7890   */\n      tag_200\n        /* \"#utility.yul\":7882:7889   */\n      dup12\n        /* \"#utility.yul\":7873:7879   */\n      dup3\n        /* \"#utility.yul\":7862:7871   */\n      dup13\n        /* \"#utility.yul\":7858:7880   */\n      add\n        /* \"#utility.yul\":7837:7890   */\n      tag_92\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7827:7890   */\n      swap7\n      pop\n        /* \"#utility.yul\":7782:7900   */\n      pop\n        /* \"#utility.yul\":7939:7941   */\n      0x60\n        /* \"#utility.yul\":7965:8018   */\n      tag_201\n        /* \"#utility.yul\":8010:8017   */\n      dup12\n        /* \"#utility.yul\":8001:8007   */\n      dup3\n        /* \"#utility.yul\":7990:7999   */\n      dup13\n        /* \"#utility.yul\":7986:8008   */\n      add\n        /* \"#utility.yul\":7965:8018   */\n      tag_92\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7955:8018   */\n      swap6\n      pop\n        /* \"#utility.yul\":7910:8028   */\n      pop\n        /* \"#utility.yul\":8067:8070   */\n      0x80\n        /* \"#utility.yul\":8094:8147   */\n      tag_202\n        /* \"#utility.yul\":8139:8146   */\n      dup12\n        /* \"#utility.yul\":8130:8136   */\n      dup3\n        /* \"#utility.yul\":8119:8128   */\n      dup13\n        /* \"#utility.yul\":8115:8137   */\n      add\n        /* \"#utility.yul\":8094:8147   */\n      tag_92\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8084:8147   */\n      swap5\n      pop\n        /* \"#utility.yul\":8038:8157   */\n      pop\n        /* \"#utility.yul\":8196:8199   */\n      0xa0\n        /* \"#utility.yul\":8223:8276   */\n      tag_203\n        /* \"#utility.yul\":8268:8275   */\n      dup12\n        /* \"#utility.yul\":8259:8265   */\n      dup3\n        /* \"#utility.yul\":8248:8257   */\n      dup13\n        /* \"#utility.yul\":8244:8266   */\n      add\n        /* \"#utility.yul\":8223:8276   */\n      tag_92\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8213:8276   */\n      swap4\n      pop\n        /* \"#utility.yul\":8167:8286   */\n      pop\n        /* \"#utility.yul\":8325:8328   */\n      0xc0\n        /* \"#utility.yul\":8352:8405   */\n      tag_204\n        /* \"#utility.yul\":8397:8404   */\n      dup12\n        /* \"#utility.yul\":8388:8394   */\n      dup3\n        /* \"#utility.yul\":8377:8386   */\n      dup13\n        /* \"#utility.yul\":8373:8395   */\n      add\n        /* \"#utility.yul\":8352:8405   */\n      tag_106\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8342:8405   */\n      swap3\n      pop\n        /* \"#utility.yul\":8296:8415   */\n      pop\n        /* \"#utility.yul\":8454:8457   */\n      0xe0\n        /* \"#utility.yul\":8481:8534   */\n      tag_205\n        /* \"#utility.yul\":8526:8533   */\n      dup12\n        /* \"#utility.yul\":8517:8523   */\n      dup3\n        /* \"#utility.yul\":8506:8515   */\n      dup13\n        /* \"#utility.yul\":8502:8524   */\n      add\n        /* \"#utility.yul\":8481:8534   */\n      tag_92\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8471:8534   */\n      swap2\n      pop\n        /* \"#utility.yul\":8425:8544   */\n      pop\n        /* \"#utility.yul\":7202:8551   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8557:8999   */\n    tag_35:\n        /* \"#utility.yul\":8706:8710   */\n      0x00\n        /* \"#utility.yul\":8744:8746   */\n      0x60\n        /* \"#utility.yul\":8733:8742   */\n      dup3\n        /* \"#utility.yul\":8729:8747   */\n      add\n        /* \"#utility.yul\":8721:8747   */\n      swap1\n      pop\n        /* \"#utility.yul\":8757:8828   */\n      tag_207\n        /* \"#utility.yul\":8825:8826   */\n      0x00\n        /* \"#utility.yul\":8814:8823   */\n      dup4\n        /* \"#utility.yul\":8810:8827   */\n      add\n        /* \"#utility.yul\":8801:8807   */\n      dup7\n        /* \"#utility.yul\":8757:8828   */\n      tag_93\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8838:8910   */\n      tag_208\n        /* \"#utility.yul\":8906:8908   */\n      0x20\n        /* \"#utility.yul\":8895:8904   */\n      dup4\n        /* \"#utility.yul\":8891:8909   */\n      add\n        /* \"#utility.yul\":8882:8888   */\n      dup6\n        /* \"#utility.yul\":8838:8910   */\n      tag_93\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8920:8992   */\n      tag_209\n        /* \"#utility.yul\":8988:8990   */\n      0x40\n        /* \"#utility.yul\":8977:8986   */\n      dup4\n        /* \"#utility.yul\":8973:8991   */\n      add\n        /* \"#utility.yul\":8964:8970   */\n      dup5\n        /* \"#utility.yul\":8920:8992   */\n      tag_93\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8557:8999   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9123   */\n    tag_114:\n        /* \"#utility.yul\":9092:9116   */\n      tag_211\n        /* \"#utility.yul\":9110:9115   */\n      dup2\n        /* \"#utility.yul\":9092:9116   */\n      tag_104\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":9087:9090   */\n      dup3\n        /* \"#utility.yul\":9080:9117   */\n      mstore\n        /* \"#utility.yul\":9005:9123   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9129:9351   */\n    tag_41:\n        /* \"#utility.yul\":9222:9226   */\n      0x00\n        /* \"#utility.yul\":9260:9262   */\n      0x20\n        /* \"#utility.yul\":9249:9258   */\n      dup3\n        /* \"#utility.yul\":9245:9263   */\n      add\n        /* \"#utility.yul\":9237:9263   */\n      swap1\n      pop\n        /* \"#utility.yul\":9273:9344   */\n      tag_213\n        /* \"#utility.yul\":9341:9342   */\n      0x00\n        /* \"#utility.yul\":9330:9339   */\n      dup4\n        /* \"#utility.yul\":9326:9343   */\n      add\n        /* \"#utility.yul\":9317:9323   */\n      dup5\n        /* \"#utility.yul\":9273:9344   */\n      tag_114\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9129:9351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9357:9831   */\n    tag_44:\n        /* \"#utility.yul\":9425:9431   */\n      0x00\n        /* \"#utility.yul\":9433:9439   */\n      0x00\n        /* \"#utility.yul\":9482:9484   */\n      0x40\n        /* \"#utility.yul\":9470:9479   */\n      dup4\n        /* \"#utility.yul\":9461:9468   */\n      dup6\n        /* \"#utility.yul\":9457:9480   */\n      sub\n        /* \"#utility.yul\":9453:9485   */\n      slt\n        /* \"#utility.yul\":9450:9569   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":9488:9567   */\n      tag_216\n      tag_88\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":9450:9569   */\n    tag_215:\n        /* \"#utility.yul\":9608:9609   */\n      0x00\n        /* \"#utility.yul\":9633:9686   */\n      tag_217\n        /* \"#utility.yul\":9678:9685   */\n      dup6\n        /* \"#utility.yul\":9669:9675   */\n      dup3\n        /* \"#utility.yul\":9658:9667   */\n      dup7\n        /* \"#utility.yul\":9654:9676   */\n      add\n        /* \"#utility.yul\":9633:9686   */\n      tag_106\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":9623:9686   */\n      swap3\n      pop\n        /* \"#utility.yul\":9579:9696   */\n      pop\n        /* \"#utility.yul\":9735:9737   */\n      0x20\n        /* \"#utility.yul\":9761:9814   */\n      tag_218\n        /* \"#utility.yul\":9806:9813   */\n      dup6\n        /* \"#utility.yul\":9797:9803   */\n      dup3\n        /* \"#utility.yul\":9786:9795   */\n      dup7\n        /* \"#utility.yul\":9782:9804   */\n      add\n        /* \"#utility.yul\":9761:9814   */\n      tag_106\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9751:9814   */\n      swap2\n      pop\n        /* \"#utility.yul\":9706:9824   */\n      pop\n        /* \"#utility.yul\":9357:9831   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:11040   */\n    tag_49:\n        /* \"#utility.yul\":9950:9956   */\n      0x00\n        /* \"#utility.yul\":9958:9964   */\n      0x00\n        /* \"#utility.yul\":9966:9972   */\n      0x00\n        /* \"#utility.yul\":9974:9980   */\n      0x00\n        /* \"#utility.yul\":9982:9988   */\n      0x00\n        /* \"#utility.yul\":9990:9996   */\n      0x00\n        /* \"#utility.yul\":9998:10004   */\n      0x00\n        /* \"#utility.yul\":10047:10050   */\n      0xe0\n        /* \"#utility.yul\":10035:10044   */\n      dup9\n        /* \"#utility.yul\":10026:10033   */\n      dup11\n        /* \"#utility.yul\":10022:10045   */\n      sub\n        /* \"#utility.yul\":10018:10051   */\n      slt\n        /* \"#utility.yul\":10015:10135   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":10054:10133   */\n      tag_221\n      tag_88\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":10015:10135   */\n    tag_220:\n        /* \"#utility.yul\":10174:10175   */\n      0x00\n        /* \"#utility.yul\":10199:10252   */\n      tag_222\n        /* \"#utility.yul\":10244:10251   */\n      dup11\n        /* \"#utility.yul\":10235:10241   */\n      dup3\n        /* \"#utility.yul\":10224:10233   */\n      dup12\n        /* \"#utility.yul\":10220:10242   */\n      add\n        /* \"#utility.yul\":10199:10252   */\n      tag_106\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10189:10252   */\n      swap8\n      pop\n        /* \"#utility.yul\":10145:10262   */\n      pop\n        /* \"#utility.yul\":10301:10303   */\n      0x20\n        /* \"#utility.yul\":10327:10380   */\n      tag_223\n        /* \"#utility.yul\":10372:10379   */\n      dup11\n        /* \"#utility.yul\":10363:10369   */\n      dup3\n        /* \"#utility.yul\":10352:10361   */\n      dup12\n        /* \"#utility.yul\":10348:10370   */\n      add\n        /* \"#utility.yul\":10327:10380   */\n      tag_106\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":10317:10380   */\n      swap7\n      pop\n        /* \"#utility.yul\":10272:10390   */\n      pop\n        /* \"#utility.yul\":10429:10431   */\n      0x40\n        /* \"#utility.yul\":10455:10508   */\n      tag_224\n        /* \"#utility.yul\":10500:10507   */\n      dup11\n        /* \"#utility.yul\":10491:10497   */\n      dup3\n        /* \"#utility.yul\":10480:10489   */\n      dup12\n        /* \"#utility.yul\":10476:10498   */\n      add\n        /* \"#utility.yul\":10455:10508   */\n      tag_92\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":10445:10508   */\n      swap6\n      pop\n        /* \"#utility.yul\":10400:10518   */\n      pop\n        /* \"#utility.yul\":10557:10559   */\n      0x60\n        /* \"#utility.yul\":10583:10636   */\n      tag_225\n        /* \"#utility.yul\":10628:10635   */\n      dup11\n        /* \"#utility.yul\":10619:10625   */\n      dup3\n        /* \"#utility.yul\":10608:10617   */\n      dup12\n        /* \"#utility.yul\":10604:10626   */\n      add\n        /* \"#utility.yul\":10583:10636   */\n      tag_92\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":10573:10636   */\n      swap5\n      pop\n        /* \"#utility.yul\":10528:10646   */\n      pop\n        /* \"#utility.yul\":10685:10688   */\n      0x80\n        /* \"#utility.yul\":10712:10765   */\n      tag_226\n        /* \"#utility.yul\":10757:10764   */\n      dup11\n        /* \"#utility.yul\":10748:10754   */\n      dup3\n        /* \"#utility.yul\":10737:10746   */\n      dup12\n        /* \"#utility.yul\":10733:10755   */\n      add\n        /* \"#utility.yul\":10712:10765   */\n      tag_92\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":10702:10765   */\n      swap4\n      pop\n        /* \"#utility.yul\":10656:10775   */\n      pop\n        /* \"#utility.yul\":10814:10817   */\n      0xa0\n        /* \"#utility.yul\":10841:10894   */\n      tag_227\n        /* \"#utility.yul\":10886:10893   */\n      dup11\n        /* \"#utility.yul\":10877:10883   */\n      dup3\n        /* \"#utility.yul\":10866:10875   */\n      dup12\n        /* \"#utility.yul\":10862:10884   */\n      add\n        /* \"#utility.yul\":10841:10894   */\n      tag_106\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":10831:10894   */\n      swap3\n      pop\n        /* \"#utility.yul\":10785:10904   */\n      pop\n        /* \"#utility.yul\":10943:10946   */\n      0xc0\n        /* \"#utility.yul\":10970:11023   */\n      tag_228\n        /* \"#utility.yul\":11015:11022   */\n      dup11\n        /* \"#utility.yul\":11006:11012   */\n      dup3\n        /* \"#utility.yul\":10995:11004   */\n      dup12\n        /* \"#utility.yul\":10991:11013   */\n      add\n        /* \"#utility.yul\":10970:11023   */\n      tag_92\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":10960:11023   */\n      swap2\n      pop\n        /* \"#utility.yul\":10914:11033   */\n      pop\n        /* \"#utility.yul\":9837:11040   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11046:11378   */\n    tag_52:\n        /* \"#utility.yul\":11167:11171   */\n      0x00\n        /* \"#utility.yul\":11205:11207   */\n      0x40\n        /* \"#utility.yul\":11194:11203   */\n      dup3\n        /* \"#utility.yul\":11190:11208   */\n      add\n        /* \"#utility.yul\":11182:11208   */\n      swap1\n      pop\n        /* \"#utility.yul\":11218:11289   */\n      tag_230\n        /* \"#utility.yul\":11286:11287   */\n      0x00\n        /* \"#utility.yul\":11275:11284   */\n      dup4\n        /* \"#utility.yul\":11271:11288   */\n      add\n        /* \"#utility.yul\":11262:11268   */\n      dup6\n        /* \"#utility.yul\":11218:11289   */\n      tag_93\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":11299:11371   */\n      tag_231\n        /* \"#utility.yul\":11367:11369   */\n      0x20\n        /* \"#utility.yul\":11356:11365   */\n      dup4\n        /* \"#utility.yul\":11352:11370   */\n      add\n        /* \"#utility.yul\":11343:11349   */\n      dup5\n        /* \"#utility.yul\":11299:11371   */\n      tag_93\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":11046:11378   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11384:11713   */\n    tag_58:\n        /* \"#utility.yul\":11443:11449   */\n      0x00\n        /* \"#utility.yul\":11492:11494   */\n      0x20\n        /* \"#utility.yul\":11480:11489   */\n      dup3\n        /* \"#utility.yul\":11471:11478   */\n      dup5\n        /* \"#utility.yul\":11467:11490   */\n      sub\n        /* \"#utility.yul\":11463:11495   */\n      slt\n        /* \"#utility.yul\":11460:11579   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":11498:11577   */\n      tag_234\n      tag_88\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":11460:11579   */\n    tag_233:\n        /* \"#utility.yul\":11618:11619   */\n      0x00\n        /* \"#utility.yul\":11643:11696   */\n      tag_235\n        /* \"#utility.yul\":11688:11695   */\n      dup5\n        /* \"#utility.yul\":11679:11685   */\n      dup3\n        /* \"#utility.yul\":11668:11677   */\n      dup6\n        /* \"#utility.yul\":11664:11686   */\n      add\n        /* \"#utility.yul\":11643:11696   */\n      tag_106\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":11633:11696   */\n      swap2\n      pop\n        /* \"#utility.yul\":11589:11706   */\n      pop\n        /* \"#utility.yul\":11384:11713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208dc22bc82d66597160ac9ebedcd8c4597d0290ae72383d9bc073b661fafcd6ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 313,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:7",
										"nodeType": "YulBlock",
										"src": "0:1707:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "939:413:7",
													"nodeType": "YulBlock",
													"src": "939:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:7",
																"nodeType": "YulBlock",
																"src": "985:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:7"
																			},
																			"nativeSrc": "987:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:7"
																		},
																		"nativeSrc": "987:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:7"
																		},
																		"nativeSrc": "956:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "981:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:7"
																},
																"nativeSrc": "952:32:7",
																"nodeType": "YulFunctionCall",
																"src": "952:32:7"
															},
															"nativeSrc": "949:119:7",
															"nodeType": "YulIf",
															"src": "949:119:7"
														},
														{
															"nativeSrc": "1078:128:7",
															"nodeType": "YulBlock",
															"src": "1078:128:7",
															"statements": [
																{
																	"nativeSrc": "1093:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:7"
																				},
																				"nativeSrc": "1164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:7"
																		},
																		"nativeSrc": "1132:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:7",
															"nodeType": "YulBlock",
															"src": "1216:129:7",
															"statements": [
																{
																	"nativeSrc": "1231:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:7"
																				},
																				"nativeSrc": "1303:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:7"
																		},
																		"nativeSrc": "1271:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:7",
														"nodeType": "YulTypedName",
														"src": "901:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:7",
														"nodeType": "YulTypedName",
														"src": "912:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:7",
														"nodeType": "YulTypedName",
														"src": "924:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:7",
														"nodeType": "YulTypedName",
														"src": "932:6:7",
														"type": ""
													}
												],
												"src": "845:507:7"
											},
											{
												"body": {
													"nativeSrc": "1423:53:7",
													"nodeType": "YulBlock",
													"src": "1423:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:7"
																		},
																		"nativeSrc": "1445:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:7"
																},
																"nativeSrc": "1433:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:7"
															},
															"nativeSrc": "1433:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:7",
														"nodeType": "YulTypedName",
														"src": "1411:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:7",
														"nodeType": "YulTypedName",
														"src": "1418:3:7",
														"type": ""
													}
												],
												"src": "1358:118:7"
											},
											{
												"body": {
													"nativeSrc": "1580:124:7",
													"nodeType": "YulBlock",
													"src": "1580:124:7",
													"statements": [
														{
															"nativeSrc": "1590:26:7",
															"nodeType": "YulAssignment",
															"src": "1590:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:7"
																},
																"nativeSrc": "1598:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:7"
																		},
																		"nativeSrc": "1679:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:7"
																},
																"nativeSrc": "1626:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:7"
															},
															"nativeSrc": "1626:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:7",
														"nodeType": "YulTypedName",
														"src": "1552:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:7",
														"nodeType": "YulTypedName",
														"src": "1564:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:7",
														"nodeType": "YulTypedName",
														"src": "1575:4:7",
														"type": ""
													}
												],
												"src": "1482:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610d2f380380610d2f83398181016040528101906100319190610258565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102a5565b60405180910390fd5b6100b18161013960201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102be565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610227826101fe565b9050919050565b6102378161021d565b8114610241575f5ffd5b50565b5f815190506102528161022e565b92915050565b5f5f6040838503121561026e5761026d6101fa565b5b5f61027b85828601610244565b925050602061028c85828601610244565b9150509250929050565b61029f8161021d565b82525050565b5f6020820190506102b85f830184610296565b92915050565b610a64806102cb5f395ff3fe608060405234801561000f575f5ffd5b506004361061009c575f3560e01c80638da5cb5b116100645780638da5cb5b1461015a578063ac41865a14610178578063baa2abde146101a8578063d21220a7146101d9578063f2fde38b146101f75761009c565b8063054d50d4146100a057806325be124e146100d057806338ed1739146100ee5780633de2d6811461011e578063715018a614610150575b5f5ffd5b6100ba60048036038101906100b591906104df565b610213565b6040516100c7919061053e565b60405180910390f35b6100d861021b565b6040516100e591906105d1565b60405180910390f35b61010860048036038101906101039190610686565b610240565b60405161011591906107d3565b60405180910390f35b610138600480360381019061013391906107f3565b61024c565b604051610147939291906108a4565b60405180910390f35b61015861025d565b005b610162610270565b60405161016f91906108e8565b60405180910390f35b610192600480360381019061018d9190610901565b610297565b60405161019f919061053e565b60405180910390f35b6101c260048036038101906101bd919061093f565b61029e565b6040516101d09291906109dc565b60405180910390f35b6101e16102ac565b6040516101ee91906105d1565b60405180910390f35b610211600480360381019061020c9190610a03565b6102d1565b005b5f9392505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60609695505050505050565b5f5f5f985098509895505050505050565b610265610355565b61026e5f6103dc565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f92915050565b5f5f97509795505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102d9610355565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610349575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161034091906108e8565b60405180910390fd5b610352816103dc565b50565b61035d61049d565b73ffffffffffffffffffffffffffffffffffffffff1661037b610270565b73ffffffffffffffffffffffffffffffffffffffff16146103da5761039e61049d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103d191906108e8565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f5ffd5b5f819050919050565b6104be816104ac565b81146104c8575f5ffd5b50565b5f813590506104d9816104b5565b92915050565b5f5f5f606084860312156104f6576104f56104a4565b5b5f610503868287016104cb565b9350506020610514868287016104cb565b9250506040610525868287016104cb565b9150509250925092565b610538816104ac565b82525050565b5f6020820190506105515f83018461052f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61059961059461058f84610557565b610576565b610557565b9050919050565b5f6105aa8261057f565b9050919050565b5f6105bb826105a0565b9050919050565b6105cb816105b1565b82525050565b5f6020820190506105e45f8301846105c2565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261060b5761060a6105ea565b5b8235905067ffffffffffffffff811115610628576106276105ee565b5b602083019150836020820283011115610644576106436105f2565b5b9250929050565b5f61065582610557565b9050919050565b6106658161064b565b811461066f575f5ffd5b50565b5f813590506106808161065c565b92915050565b5f5f5f5f5f5f60a087890312156106a05761069f6104a4565b5b5f6106ad89828a016104cb565b96505060206106be89828a016104cb565b955050604087013567ffffffffffffffff8111156106df576106de6104a8565b5b6106eb89828a016105f6565b945094505060606106fe89828a01610672565b925050608061070f89828a016104cb565b9150509295509295509295565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61074e816104ac565b82525050565b5f61075f8383610745565b60208301905092915050565b5f602082019050919050565b5f6107818261071c565b61078b8185610726565b935061079683610736565b805f5b838110156107c65781516107ad8882610754565b97506107b88361076b565b925050600181019050610799565b5085935050505092915050565b5f6020820190508181035f8301526107eb8184610777565b905092915050565b5f5f5f5f5f5f5f5f610100898b0312156108105761080f6104a4565b5b5f61081d8b828c01610672565b985050602061082e8b828c01610672565b975050604061083f8b828c016104cb565b96505060606108508b828c016104cb565b95505060806108618b828c016104cb565b94505060a06108728b828c016104cb565b93505060c06108838b828c01610672565b92505060e06108948b828c016104cb565b9150509295985092959890939650565b5f6060820190506108b75f83018661052f565b6108c4602083018561052f565b6108d1604083018461052f565b949350505050565b6108e28161064b565b82525050565b5f6020820190506108fb5f8301846108d9565b92915050565b5f5f60408385031215610917576109166104a4565b5b5f61092485828601610672565b925050602061093585828601610672565b9150509250929050565b5f5f5f5f5f5f5f60e0888a03121561095a576109596104a4565b5b5f6109678a828b01610672565b97505060206109788a828b01610672565b96505060406109898a828b016104cb565b955050606061099a8a828b016104cb565b94505060806109ab8a828b016104cb565b93505060a06109bc8a828b01610672565b92505060c06109cd8a828b016104cb565b91505092959891949750929550565b5f6040820190506109ef5f83018561052f565b6109fc602083018461052f565b9392505050565b5f60208284031215610a1857610a176104a4565b5b5f610a2584828501610672565b9150509291505056fea26469706673582212208dc22bc82d66597160ac9ebedcd8c4597d0290ae72383d9bc073b661fafcd6ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD2F CODESIZE SUB DUP1 PUSH2 0xD2F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x258 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x139 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2BE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x227 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x237 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x241 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x252 DUP2 PUSH2 0x22E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26D PUSH2 0x1FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27B DUP6 DUP3 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28C DUP6 DUP3 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x296 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA64 DUP1 PUSH2 0x2CB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x25BE124E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x3DE2D681 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x25D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x901 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP3 SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x265 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x26E PUSH0 PUSH2 0x3DC JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x355 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x349 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x3DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x35D PUSH2 0x49D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37B PUSH2 0x270 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3DA JUMPI PUSH2 0x39E PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BE DUP2 PUSH2 0x4AC JUMP JUMPDEST DUP2 EQ PUSH2 0x4C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D9 DUP2 PUSH2 0x4B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x503 DUP7 DUP3 DUP8 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x514 DUP7 DUP3 DUP8 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x525 DUP7 DUP3 DUP8 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x538 DUP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x551 PUSH0 DUP4 ADD DUP5 PUSH2 0x52F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x599 PUSH2 0x594 PUSH2 0x58F DUP5 PUSH2 0x557 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5AA DUP3 PUSH2 0x57F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB DUP3 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CB DUP2 PUSH2 0x5B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x5EA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x628 JUMPI PUSH2 0x627 PUSH2 0x5EE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x644 JUMPI PUSH2 0x643 PUSH2 0x5F2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x655 DUP3 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x665 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP2 EQ PUSH2 0x66F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0x65C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6A0 JUMPI PUSH2 0x69F PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6AD DUP10 DUP3 DUP11 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6BE DUP10 DUP3 DUP11 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST PUSH2 0x6EB DUP10 DUP3 DUP11 ADD PUSH2 0x5F6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x6FE DUP10 DUP3 DUP11 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x70F DUP10 DUP3 DUP11 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75F DUP4 DUP4 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x781 DUP3 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x78B DUP2 DUP6 PUSH2 0x726 JUMP JUMPDEST SWAP4 POP PUSH2 0x796 DUP4 PUSH2 0x736 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7C6 JUMPI DUP2 MLOAD PUSH2 0x7AD DUP9 DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP8 POP PUSH2 0x7B8 DUP4 PUSH2 0x76B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x799 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7EB DUP2 DUP5 PUSH2 0x777 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x81D DUP12 DUP3 DUP13 ADD PUSH2 0x672 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x82E DUP12 DUP3 DUP13 ADD PUSH2 0x672 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x83F DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x850 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x861 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x872 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x883 DUP12 DUP3 DUP13 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x894 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x8C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x8D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x52F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8E2 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8FB PUSH0 DUP4 ADD DUP5 PUSH2 0x8D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x917 JUMPI PUSH2 0x916 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x924 DUP6 DUP3 DUP7 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x935 DUP6 DUP3 DUP7 ADD PUSH2 0x672 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x95A JUMPI PUSH2 0x959 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x967 DUP11 DUP3 DUP12 ADD PUSH2 0x672 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x978 DUP11 DUP3 DUP12 ADD PUSH2 0x672 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x989 DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x99A DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x9AB DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x9BC DUP11 DUP3 DUP12 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x9CD DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9EF PUSH0 DUP4 ADD DUP6 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x9FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x52F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA17 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA25 DUP5 DUP3 DUP6 ADD PUSH2 0x672 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xC2 0x2B 0xC8 0x2D PUSH7 0x597160AC9EBEDC 0xD8 0xC4 MSIZE PUSH30 0x290AE72383D9BC073B661FAFCD6CA64736F6C634300081E003300000000 ",
							"sourceMap": "344:1495:6:-:0;;;470:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;524:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;562:7:6::1;547:6;;:23;;;;;;;;;;;;;;;;;;596:7;581:6;;:23;;;;;;;;;;;;;;;;;;470:145:::0;;344:1495;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;344:1495:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 853,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1181,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 988,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidityaddLiquidity_1007": {
									"entryPoint": 588,
									"id": 1007,
									"parameterSlots": 8,
									"returnSlots": 3
								},
								"@getAmountOut_1069": {
									"entryPoint": 531,
									"id": 1069,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getPrice_1057": {
									"entryPoint": 663,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 624,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_1029": {
									"entryPoint": 670,
									"id": 1029,
									"parameterSlots": 7,
									"returnSlots": 2
								},
								"@renounceOwnership_98": {
									"entryPoint": 605,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapExactTokensForTokens_1047": {
									"entryPoint": 576,
									"id": 1047,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@token1_954": {
									"entryPoint": 684,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token2_957": {
									"entryPoint": 539,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 721,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$799_to_t_address": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11716:7",
										"nodeType": "YulBlock",
										"src": "0:11716:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "597:87:7",
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nativeSrc": "607:29:7",
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nativeSrc": "616:20:7",
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nativeSrc": "645:33:7",
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nativeSrc": "645:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:7",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:7",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:7",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nativeSrc": "790:519:7",
													"nodeType": "YulBlock",
													"src": "790:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:83:7",
																"nodeType": "YulBlock",
																"src": "836:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "838:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:7"
																			},
																			"nativeSrc": "838:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:7"
																		},
																		"nativeSrc": "838:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "811:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "807:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:7"
																		},
																		"nativeSrc": "807:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "832:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "803:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:7"
																},
																"nativeSrc": "803:32:7",
																"nodeType": "YulFunctionCall",
																"src": "803:32:7"
															},
															"nativeSrc": "800:119:7",
															"nodeType": "YulIf",
															"src": "800:119:7"
														},
														{
															"nativeSrc": "929:117:7",
															"nodeType": "YulBlock",
															"src": "929:117:7",
															"statements": [
																{
																	"nativeSrc": "944:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "948:6:7",
																			"nodeType": "YulTypedName",
																			"src": "948:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "973:63:7",
																	"nodeType": "YulAssignment",
																	"src": "973:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1008:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1019:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1004:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:7"
																				},
																				"nativeSrc": "1004:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "983:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:7"
																		},
																		"nativeSrc": "983:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "973:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1056:118:7",
															"nodeType": "YulBlock",
															"src": "1056:118:7",
															"statements": [
																{
																	"nativeSrc": "1071:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1075:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1101:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1101:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1136:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1147:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1132:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:7"
																				},
																				"nativeSrc": "1132:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1156:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1111:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:7"
																		},
																		"nativeSrc": "1111:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1101:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1184:118:7",
															"nodeType": "YulBlock",
															"src": "1184:118:7",
															"statements": [
																{
																	"nativeSrc": "1199:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1213:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1203:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1229:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1229:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1264:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1275:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1260:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:7"
																				},
																				"nativeSrc": "1260:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1284:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1239:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:7"
																		},
																		"nativeSrc": "1239:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1229:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "690:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "744:9:7",
														"nodeType": "YulTypedName",
														"src": "744:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "755:7:7",
														"nodeType": "YulTypedName",
														"src": "755:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "767:6:7",
														"nodeType": "YulTypedName",
														"src": "767:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "775:6:7",
														"nodeType": "YulTypedName",
														"src": "775:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "783:6:7",
														"nodeType": "YulTypedName",
														"src": "783:6:7",
														"type": ""
													}
												],
												"src": "690:619:7"
											},
											{
												"body": {
													"nativeSrc": "1380:53:7",
													"nodeType": "YulBlock",
													"src": "1380:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1397:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1397:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1420:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1420:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1402:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1402:17:7"
																		},
																		"nativeSrc": "1402:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:7"
																},
																"nativeSrc": "1390:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1390:37:7"
															},
															"nativeSrc": "1390:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1390:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1315:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1368:5:7",
														"nodeType": "YulTypedName",
														"src": "1368:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1375:3:7",
														"nodeType": "YulTypedName",
														"src": "1375:3:7",
														"type": ""
													}
												],
												"src": "1315:118:7"
											},
											{
												"body": {
													"nativeSrc": "1537:124:7",
													"nodeType": "YulBlock",
													"src": "1537:124:7",
													"statements": [
														{
															"nativeSrc": "1547:26:7",
															"nodeType": "YulAssignment",
															"src": "1547:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:7"
																},
																"nativeSrc": "1555:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:7"
																		},
																		"nativeSrc": "1636:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:7"
																},
																"nativeSrc": "1583:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:7"
															},
															"nativeSrc": "1583:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1439:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:7",
														"nodeType": "YulTypedName",
														"src": "1509:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:7",
														"nodeType": "YulTypedName",
														"src": "1521:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:7",
														"nodeType": "YulTypedName",
														"src": "1532:4:7",
														"type": ""
													}
												],
												"src": "1439:222:7"
											},
											{
												"body": {
													"nativeSrc": "1712:81:7",
													"nodeType": "YulBlock",
													"src": "1712:81:7",
													"statements": [
														{
															"nativeSrc": "1722:65:7",
															"nodeType": "YulAssignment",
															"src": "1722:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1737:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1737:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1744:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1744:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1733:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:3:7"
																},
																"nativeSrc": "1733:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1733:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1722:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1722:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1667:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1694:5:7",
														"nodeType": "YulTypedName",
														"src": "1694:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1704:7:7",
														"nodeType": "YulTypedName",
														"src": "1704:7:7",
														"type": ""
													}
												],
												"src": "1667:126:7"
											},
											{
												"body": {
													"nativeSrc": "1831:28:7",
													"nodeType": "YulBlock",
													"src": "1831:28:7",
													"statements": [
														{
															"nativeSrc": "1841:12:7",
															"nodeType": "YulAssignment",
															"src": "1841:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:7",
																"nodeType": "YulIdentifier",
																"src": "1848:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1799:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1817:5:7",
														"nodeType": "YulTypedName",
														"src": "1817:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1827:3:7",
														"nodeType": "YulTypedName",
														"src": "1827:3:7",
														"type": ""
													}
												],
												"src": "1799:60:7"
											},
											{
												"body": {
													"nativeSrc": "1925:82:7",
													"nodeType": "YulBlock",
													"src": "1925:82:7",
													"statements": [
														{
															"nativeSrc": "1935:66:7",
															"nodeType": "YulAssignment",
															"src": "1935:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1993:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1993:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1975:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1975:17:7"
																				},
																				"nativeSrc": "1975:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1975:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1966:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1966:8:7"
																		},
																		"nativeSrc": "1966:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1966:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1948:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1948:17:7"
																},
																"nativeSrc": "1948:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1948:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1935:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1935:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1865:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1905:5:7",
														"nodeType": "YulTypedName",
														"src": "1905:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1915:9:7",
														"nodeType": "YulTypedName",
														"src": "1915:9:7",
														"type": ""
													}
												],
												"src": "1865:142:7"
											},
											{
												"body": {
													"nativeSrc": "2073:66:7",
													"nodeType": "YulBlock",
													"src": "2073:66:7",
													"statements": [
														{
															"nativeSrc": "2083:50:7",
															"nodeType": "YulAssignment",
															"src": "2083:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2127:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2127:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2096:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2096:30:7"
																},
																"nativeSrc": "2096:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2096:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2083:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2083:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2013:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2053:5:7",
														"nodeType": "YulTypedName",
														"src": "2053:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2063:9:7",
														"nodeType": "YulTypedName",
														"src": "2063:9:7",
														"type": ""
													}
												],
												"src": "2013:126:7"
											},
											{
												"body": {
													"nativeSrc": "2218:66:7",
													"nodeType": "YulBlock",
													"src": "2218:66:7",
													"statements": [
														{
															"nativeSrc": "2228:50:7",
															"nodeType": "YulAssignment",
															"src": "2228:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2272:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2272:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2241:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2241:30:7"
																},
																"nativeSrc": "2241:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2241:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2228:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2228:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$799_to_t_address",
												"nativeSrc": "2145:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2198:5:7",
														"nodeType": "YulTypedName",
														"src": "2198:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2208:9:7",
														"nodeType": "YulTypedName",
														"src": "2208:9:7",
														"type": ""
													}
												],
												"src": "2145:139:7"
											},
											{
												"body": {
													"nativeSrc": "2368:79:7",
													"nodeType": "YulBlock",
													"src": "2368:79:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2385:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2385:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2434:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2434:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$799_to_t_address",
																			"nativeSrc": "2390:43:7",
																			"nodeType": "YulIdentifier",
																			"src": "2390:43:7"
																		},
																		"nativeSrc": "2390:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2390:50:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2378:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2378:6:7"
																},
																"nativeSrc": "2378:63:7",
																"nodeType": "YulFunctionCall",
																"src": "2378:63:7"
															},
															"nativeSrc": "2378:63:7",
															"nodeType": "YulExpressionStatement",
															"src": "2378:63:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
												"nativeSrc": "2290:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2356:5:7",
														"nodeType": "YulTypedName",
														"src": "2356:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2363:3:7",
														"nodeType": "YulTypedName",
														"src": "2363:3:7",
														"type": ""
													}
												],
												"src": "2290:157:7"
											},
											{
												"body": {
													"nativeSrc": "2564:137:7",
													"nodeType": "YulBlock",
													"src": "2564:137:7",
													"statements": [
														{
															"nativeSrc": "2574:26:7",
															"nodeType": "YulAssignment",
															"src": "2574:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2586:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2586:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2597:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:7"
																},
																"nativeSrc": "2582:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2582:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2574:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2667:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2667:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2680:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2680:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2691:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2691:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2676:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2676:3:7"
																		},
																		"nativeSrc": "2676:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2676:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
																	"nativeSrc": "2610:56:7",
																	"nodeType": "YulIdentifier",
																	"src": "2610:56:7"
																},
																"nativeSrc": "2610:84:7",
																"nodeType": "YulFunctionCall",
																"src": "2610:84:7"
															},
															"nativeSrc": "2610:84:7",
															"nodeType": "YulExpressionStatement",
															"src": "2610:84:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed",
												"nativeSrc": "2453:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2536:9:7",
														"nodeType": "YulTypedName",
														"src": "2536:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2548:6:7",
														"nodeType": "YulTypedName",
														"src": "2548:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2559:4:7",
														"nodeType": "YulTypedName",
														"src": "2559:4:7",
														"type": ""
													}
												],
												"src": "2453:248:7"
											},
											{
												"body": {
													"nativeSrc": "2796:28:7",
													"nodeType": "YulBlock",
													"src": "2796:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2813:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2813:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2816:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2816:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2806:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:7"
																},
																"nativeSrc": "2806:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2806:12:7"
															},
															"nativeSrc": "2806:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2806:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2707:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2707:117:7"
											},
											{
												"body": {
													"nativeSrc": "2919:28:7",
													"nodeType": "YulBlock",
													"src": "2919:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2939:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2929:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2929:6:7"
																},
																"nativeSrc": "2929:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2929:12:7"
															},
															"nativeSrc": "2929:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2929:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2830:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2830:117:7"
											},
											{
												"body": {
													"nativeSrc": "3042:28:7",
													"nodeType": "YulBlock",
													"src": "3042:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3059:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3059:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3062:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3062:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:7"
																},
																"nativeSrc": "3052:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3052:12:7"
															},
															"nativeSrc": "3052:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3052:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2953:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2953:117:7"
											},
											{
												"body": {
													"nativeSrc": "3183:478:7",
													"nodeType": "YulBlock",
													"src": "3183:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3232:83:7",
																"nodeType": "YulBlock",
																"src": "3232:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3234:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3234:77:7"
																			},
																			"nativeSrc": "3234:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3234:79:7"
																		},
																		"nativeSrc": "3234:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3234:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3211:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3211:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3219:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3219:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3207:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3207:3:7"
																				},
																				"nativeSrc": "3207:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3207:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3226:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3226:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3203:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:7"
																		},
																		"nativeSrc": "3203:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3203:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3196:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3196:6:7"
																},
																"nativeSrc": "3196:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3196:35:7"
															},
															"nativeSrc": "3193:122:7",
															"nodeType": "YulIf",
															"src": "3193:122:7"
														},
														{
															"nativeSrc": "3324:30:7",
															"nodeType": "YulAssignment",
															"src": "3324:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3347:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3347:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3334:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3334:12:7"
																},
																"nativeSrc": "3334:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3334:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3397:83:7",
																"nodeType": "YulBlock",
																"src": "3397:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "3399:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3399:77:7"
																			},
																			"nativeSrc": "3399:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3399:79:7"
																		},
																		"nativeSrc": "3399:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3399:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3369:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3369:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3377:18:7",
																		"nodeType": "YulLiteral",
																		"src": "3377:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3366:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3366:2:7"
																},
																"nativeSrc": "3366:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3366:30:7"
															},
															"nativeSrc": "3363:117:7",
															"nodeType": "YulIf",
															"src": "3363:117:7"
														},
														{
															"nativeSrc": "3489:29:7",
															"nodeType": "YulAssignment",
															"src": "3489:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3505:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3505:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3513:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3513:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3501:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3501:3:7"
																},
																"nativeSrc": "3501:17:7",
																"nodeType": "YulFunctionCall",
																"src": "3501:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3489:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3489:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3572:83:7",
																"nodeType": "YulBlock",
																"src": "3572:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3574:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3574:77:7"
																			},
																			"nativeSrc": "3574:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3574:79:7"
																		},
																		"nativeSrc": "3574:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3574:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3537:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3537:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3551:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3559:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3559:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3547:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3547:3:7"
																				},
																				"nativeSrc": "3547:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3547:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3533:3:7"
																		},
																		"nativeSrc": "3533:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3567:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3567:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3530:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3530:2:7"
																},
																"nativeSrc": "3530:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3530:41:7"
															},
															"nativeSrc": "3527:128:7",
															"nodeType": "YulIf",
															"src": "3527:128:7"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "3093:568:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3150:6:7",
														"nodeType": "YulTypedName",
														"src": "3150:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3158:3:7",
														"nodeType": "YulTypedName",
														"src": "3158:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3166:8:7",
														"nodeType": "YulTypedName",
														"src": "3166:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3176:6:7",
														"nodeType": "YulTypedName",
														"src": "3176:6:7",
														"type": ""
													}
												],
												"src": "3093:568:7"
											},
											{
												"body": {
													"nativeSrc": "3712:51:7",
													"nodeType": "YulBlock",
													"src": "3712:51:7",
													"statements": [
														{
															"nativeSrc": "3722:35:7",
															"nodeType": "YulAssignment",
															"src": "3722:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3751:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3751:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3733:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3733:17:7"
																},
																"nativeSrc": "3733:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3733:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3722:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3722:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3667:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3694:5:7",
														"nodeType": "YulTypedName",
														"src": "3694:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3704:7:7",
														"nodeType": "YulTypedName",
														"src": "3704:7:7",
														"type": ""
													}
												],
												"src": "3667:96:7"
											},
											{
												"body": {
													"nativeSrc": "3812:79:7",
													"nodeType": "YulBlock",
													"src": "3812:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3869:16:7",
																"nodeType": "YulBlock",
																"src": "3869:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3878:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3878:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3881:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3881:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3871:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3871:6:7"
																			},
																			"nativeSrc": "3871:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3871:12:7"
																		},
																		"nativeSrc": "3871:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3871:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3835:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3835:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3860:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3860:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3842:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3842:17:7"
																				},
																				"nativeSrc": "3842:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3842:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3832:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3832:2:7"
																		},
																		"nativeSrc": "3832:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3832:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3825:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:7"
																},
																"nativeSrc": "3825:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3825:43:7"
															},
															"nativeSrc": "3822:63:7",
															"nodeType": "YulIf",
															"src": "3822:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3769:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3805:5:7",
														"nodeType": "YulTypedName",
														"src": "3805:5:7",
														"type": ""
													}
												],
												"src": "3769:122:7"
											},
											{
												"body": {
													"nativeSrc": "3949:87:7",
													"nodeType": "YulBlock",
													"src": "3949:87:7",
													"statements": [
														{
															"nativeSrc": "3959:29:7",
															"nodeType": "YulAssignment",
															"src": "3959:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3981:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3981:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3968:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3968:12:7"
																},
																"nativeSrc": "3968:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3968:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3959:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3959:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4024:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4024:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3997:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3997:26:7"
																},
																"nativeSrc": "3997:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3997:33:7"
															},
															"nativeSrc": "3997:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3997:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3897:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3927:6:7",
														"nodeType": "YulTypedName",
														"src": "3927:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3935:3:7",
														"nodeType": "YulTypedName",
														"src": "3935:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3943:5:7",
														"nodeType": "YulTypedName",
														"src": "3943:5:7",
														"type": ""
													}
												],
												"src": "3897:139:7"
											},
											{
												"body": {
													"nativeSrc": "4211:972:7",
													"nodeType": "YulBlock",
													"src": "4211:972:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4258:83:7",
																"nodeType": "YulBlock",
																"src": "4258:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4260:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4260:77:7"
																			},
																			"nativeSrc": "4260:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4260:79:7"
																		},
																		"nativeSrc": "4260:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4260:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4232:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4232:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4241:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4241:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4228:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:7"
																		},
																		"nativeSrc": "4228:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4228:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4253:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4253:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4224:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4224:3:7"
																},
																"nativeSrc": "4224:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4224:33:7"
															},
															"nativeSrc": "4221:120:7",
															"nodeType": "YulIf",
															"src": "4221:120:7"
														},
														{
															"nativeSrc": "4351:117:7",
															"nodeType": "YulBlock",
															"src": "4351:117:7",
															"statements": [
																{
																	"nativeSrc": "4366:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4366:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4380:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4380:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4370:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4370:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4395:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4395:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4430:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4430:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4441:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4426:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:7"
																				},
																				"nativeSrc": "4426:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4450:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4450:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4405:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4405:20:7"
																		},
																		"nativeSrc": "4405:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4405:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4395:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4395:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4478:118:7",
															"nodeType": "YulBlock",
															"src": "4478:118:7",
															"statements": [
																{
																	"nativeSrc": "4493:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4493:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4507:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4497:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4497:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4523:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4523:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4558:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4558:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4569:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4569:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4554:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4554:3:7"
																				},
																				"nativeSrc": "4554:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4554:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4578:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4578:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4533:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4533:20:7"
																		},
																		"nativeSrc": "4533:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4533:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4523:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4523:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4606:313:7",
															"nodeType": "YulBlock",
															"src": "4606:313:7",
															"statements": [
																{
																	"nativeSrc": "4621:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4621:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4652:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4652:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4663:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4663:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4648:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4648:3:7"
																				},
																				"nativeSrc": "4648:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4648:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4635:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "4635:12:7"
																		},
																		"nativeSrc": "4635:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4625:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4625:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4714:83:7",
																		"nodeType": "YulBlock",
																		"src": "4714:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4716:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4716:77:7"
																					},
																					"nativeSrc": "4716:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4716:79:7"
																				},
																				"nativeSrc": "4716:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4716:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4686:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4686:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4694:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4694:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4683:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4683:2:7"
																		},
																		"nativeSrc": "4683:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:30:7"
																	},
																	"nativeSrc": "4680:117:7",
																	"nodeType": "YulIf",
																	"src": "4680:117:7"
																},
																{
																	"nativeSrc": "4811:98:7",
																	"nodeType": "YulAssignment",
																	"src": "4811:98:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4881:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4881:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4892:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4892:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4877:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4877:3:7"
																				},
																				"nativeSrc": "4877:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4877:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4901:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4901:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "4829:47:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:47:7"
																		},
																		"nativeSrc": "4829:80:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:80:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4811:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4811:6:7"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "4819:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4819:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4929:118:7",
															"nodeType": "YulBlock",
															"src": "4929:118:7",
															"statements": [
																{
																	"nativeSrc": "4944:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4944:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4958:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4948:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4948:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5005:3:7"
																				},
																				"nativeSrc": "5005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4984:20:7"
																		},
																		"nativeSrc": "4984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5057:119:7",
															"nodeType": "YulBlock",
															"src": "5057:119:7",
															"statements": [
																{
																	"nativeSrc": "5072:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5072:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5086:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5086:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5103:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5103:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5138:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5138:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5149:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5149:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5134:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5134:3:7"
																				},
																				"nativeSrc": "5134:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5134:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5158:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5158:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5113:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5113:20:7"
																		},
																		"nativeSrc": "5113:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5113:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5103:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5103:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256",
												"nativeSrc": "4042:1141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4141:9:7",
														"nodeType": "YulTypedName",
														"src": "4141:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4152:7:7",
														"nodeType": "YulTypedName",
														"src": "4152:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4164:6:7",
														"nodeType": "YulTypedName",
														"src": "4164:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4172:6:7",
														"nodeType": "YulTypedName",
														"src": "4172:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4180:6:7",
														"nodeType": "YulTypedName",
														"src": "4180:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4188:6:7",
														"nodeType": "YulTypedName",
														"src": "4188:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4196:6:7",
														"nodeType": "YulTypedName",
														"src": "4196:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4204:6:7",
														"nodeType": "YulTypedName",
														"src": "4204:6:7",
														"type": ""
													}
												],
												"src": "4042:1141:7"
											},
											{
												"body": {
													"nativeSrc": "5263:40:7",
													"nodeType": "YulBlock",
													"src": "5263:40:7",
													"statements": [
														{
															"nativeSrc": "5274:22:7",
															"nodeType": "YulAssignment",
															"src": "5274:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5290:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5290:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5284:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5284:5:7"
																},
																"nativeSrc": "5284:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5284:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5274:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5274:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5189:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5246:5:7",
														"nodeType": "YulTypedName",
														"src": "5246:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5256:6:7",
														"nodeType": "YulTypedName",
														"src": "5256:6:7",
														"type": ""
													}
												],
												"src": "5189:114:7"
											},
											{
												"body": {
													"nativeSrc": "5420:73:7",
													"nodeType": "YulBlock",
													"src": "5420:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5437:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5437:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5442:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5442:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5430:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5430:6:7"
																},
																"nativeSrc": "5430:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5430:19:7"
															},
															"nativeSrc": "5430:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5430:19:7"
														},
														{
															"nativeSrc": "5458:29:7",
															"nodeType": "YulAssignment",
															"src": "5458:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5477:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5477:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5482:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5482:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5473:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5473:3:7"
																},
																"nativeSrc": "5473:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5473:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5458:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5458:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5309:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5392:3:7",
														"nodeType": "YulTypedName",
														"src": "5392:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5397:6:7",
														"nodeType": "YulTypedName",
														"src": "5397:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5408:11:7",
														"nodeType": "YulTypedName",
														"src": "5408:11:7",
														"type": ""
													}
												],
												"src": "5309:184:7"
											},
											{
												"body": {
													"nativeSrc": "5571:60:7",
													"nodeType": "YulBlock",
													"src": "5571:60:7",
													"statements": [
														{
															"nativeSrc": "5581:11:7",
															"nodeType": "YulAssignment",
															"src": "5581:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5589:3:7",
																"nodeType": "YulIdentifier",
																"src": "5589:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5581:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5581:4:7"
																}
															]
														},
														{
															"nativeSrc": "5602:22:7",
															"nodeType": "YulAssignment",
															"src": "5602:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5614:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5614:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5619:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5619:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5610:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:7"
																},
																"nativeSrc": "5610:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5610:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5602:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5602:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5499:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5558:3:7",
														"nodeType": "YulTypedName",
														"src": "5558:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5566:4:7",
														"nodeType": "YulTypedName",
														"src": "5566:4:7",
														"type": ""
													}
												],
												"src": "5499:132:7"
											},
											{
												"body": {
													"nativeSrc": "5692:53:7",
													"nodeType": "YulBlock",
													"src": "5692:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5709:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5709:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5732:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5732:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5714:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5714:17:7"
																		},
																		"nativeSrc": "5714:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5714:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5702:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:7"
																},
																"nativeSrc": "5702:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5702:37:7"
															},
															"nativeSrc": "5702:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5702:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "5637:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5680:5:7",
														"nodeType": "YulTypedName",
														"src": "5680:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5687:3:7",
														"nodeType": "YulTypedName",
														"src": "5687:3:7",
														"type": ""
													}
												],
												"src": "5637:108:7"
											},
											{
												"body": {
													"nativeSrc": "5831:99:7",
													"nodeType": "YulBlock",
													"src": "5831:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5875:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5875:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5883:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5883:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "5841:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "5841:33:7"
																},
																"nativeSrc": "5841:46:7",
																"nodeType": "YulFunctionCall",
																"src": "5841:46:7"
															},
															"nativeSrc": "5841:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "5841:46:7"
														},
														{
															"nativeSrc": "5896:28:7",
															"nodeType": "YulAssignment",
															"src": "5896:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5914:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5914:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5919:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5919:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5910:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:7"
																},
																"nativeSrc": "5910:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5910:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "5896:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "5896:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "5751:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "5804:6:7",
														"nodeType": "YulTypedName",
														"src": "5804:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5812:3:7",
														"nodeType": "YulTypedName",
														"src": "5812:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "5820:10:7",
														"nodeType": "YulTypedName",
														"src": "5820:10:7",
														"type": ""
													}
												],
												"src": "5751:179:7"
											},
											{
												"body": {
													"nativeSrc": "6011:38:7",
													"nodeType": "YulBlock",
													"src": "6011:38:7",
													"statements": [
														{
															"nativeSrc": "6021:22:7",
															"nodeType": "YulAssignment",
															"src": "6021:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6033:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6033:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6038:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6038:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6029:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6029:3:7"
																},
																"nativeSrc": "6029:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6029:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6021:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6021:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5936:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5998:3:7",
														"nodeType": "YulTypedName",
														"src": "5998:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6006:4:7",
														"nodeType": "YulTypedName",
														"src": "6006:4:7",
														"type": ""
													}
												],
												"src": "5936:113:7"
											},
											{
												"body": {
													"nativeSrc": "6209:608:7",
													"nodeType": "YulBlock",
													"src": "6209:608:7",
													"statements": [
														{
															"nativeSrc": "6219:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6219:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6281:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6281:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6233:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "6233:47:7"
																},
																"nativeSrc": "6233:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6233:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6223:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6223:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6296:93:7",
															"nodeType": "YulAssignment",
															"src": "6296:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6377:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6377:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6382:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6382:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6303:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "6303:73:7"
																},
																"nativeSrc": "6303:86:7",
																"nodeType": "YulFunctionCall",
																"src": "6303:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6296:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6296:3:7"
																}
															]
														},
														{
															"nativeSrc": "6398:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6398:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6463:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6463:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6413:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "6413:49:7"
																},
																"nativeSrc": "6413:56:7",
																"nodeType": "YulFunctionCall",
																"src": "6413:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6402:7:7",
																	"nodeType": "YulTypedName",
																	"src": "6402:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6478:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6478:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "6492:7:7",
																"nodeType": "YulIdentifier",
																"src": "6492:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6482:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6482:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6568:224:7",
																"nodeType": "YulBlock",
																"src": "6568:224:7",
																"statements": [
																	{
																		"nativeSrc": "6582:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6582:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6609:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6609:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6603:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6603:5:7"
																			},
																			"nativeSrc": "6603:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6603:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "6586:13:7",
																				"nodeType": "YulTypedName",
																				"src": "6586:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6629:70:7",
																		"nodeType": "YulAssignment",
																		"src": "6629:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "6680:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "6680:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "6695:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "6636:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "6636:43:7"
																			},
																			"nativeSrc": "6636:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6636:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6629:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6629:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6712:70:7",
																		"nodeType": "YulAssignment",
																		"src": "6712:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6775:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6775:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "6722:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "6722:52:7"
																			},
																			"nativeSrc": "6722:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6722:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6712:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6712:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6530:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6530:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6533:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6533:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6527:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6527:2:7"
																},
																"nativeSrc": "6527:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6527:13:7"
															},
															"nativeSrc": "6508:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6541:18:7",
																"nodeType": "YulBlock",
																"src": "6541:18:7",
																"statements": [
																	{
																		"nativeSrc": "6543:14:7",
																		"nodeType": "YulAssignment",
																		"src": "6543:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6552:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "6552:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6555:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6555:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6548:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6548:3:7"
																			},
																			"nativeSrc": "6548:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6548:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6543:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "6543:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6512:14:7",
																"nodeType": "YulBlock",
																"src": "6512:14:7",
																"statements": [
																	{
																		"nativeSrc": "6514:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6514:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6523:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6523:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "6518:1:7",
																				"nodeType": "YulTypedName",
																				"src": "6518:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6508:284:7"
														},
														{
															"nativeSrc": "6801:10:7",
															"nodeType": "YulAssignment",
															"src": "6801:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "6808:3:7",
																"nodeType": "YulIdentifier",
																"src": "6808:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6801:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6085:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6188:5:7",
														"nodeType": "YulTypedName",
														"src": "6188:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6195:3:7",
														"nodeType": "YulTypedName",
														"src": "6195:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6204:3:7",
														"nodeType": "YulTypedName",
														"src": "6204:3:7",
														"type": ""
													}
												],
												"src": "6085:732:7"
											},
											{
												"body": {
													"nativeSrc": "6971:225:7",
													"nodeType": "YulBlock",
													"src": "6971:225:7",
													"statements": [
														{
															"nativeSrc": "6981:26:7",
															"nodeType": "YulAssignment",
															"src": "6981:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6993:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6993:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7004:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7004:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6989:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:7"
																},
																"nativeSrc": "6989:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6989:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6981:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6981:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7028:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7028:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7039:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7039:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7024:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7024:3:7"
																		},
																		"nativeSrc": "7024:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7024:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7047:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7047:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7053:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7053:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7043:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7043:3:7"
																		},
																		"nativeSrc": "7043:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7043:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7017:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:7"
																},
																"nativeSrc": "7017:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7017:47:7"
															},
															"nativeSrc": "7017:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7017:47:7"
														},
														{
															"nativeSrc": "7073:116:7",
															"nodeType": "YulAssignment",
															"src": "7073:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7175:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7175:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7184:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7184:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7081:93:7",
																	"nodeType": "YulIdentifier",
																	"src": "7081:93:7"
																},
																"nativeSrc": "7081:108:7",
																"nodeType": "YulFunctionCall",
																"src": "7081:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7073:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7073:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6823:373:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6943:9:7",
														"nodeType": "YulTypedName",
														"src": "6943:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6955:6:7",
														"nodeType": "YulTypedName",
														"src": "6955:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6966:4:7",
														"nodeType": "YulTypedName",
														"src": "6966:4:7",
														"type": ""
													}
												],
												"src": "6823:373:7"
											},
											{
												"body": {
													"nativeSrc": "7387:1164:7",
													"nodeType": "YulBlock",
													"src": "7387:1164:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7434:83:7",
																"nodeType": "YulBlock",
																"src": "7434:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7436:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7436:77:7"
																			},
																			"nativeSrc": "7436:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7436:79:7"
																		},
																		"nativeSrc": "7436:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7436:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7408:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7408:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7417:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7417:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7404:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7404:3:7"
																		},
																		"nativeSrc": "7404:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7404:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7429:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7429:3:7",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:7"
																},
																"nativeSrc": "7400:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7400:33:7"
															},
															"nativeSrc": "7397:120:7",
															"nodeType": "YulIf",
															"src": "7397:120:7"
														},
														{
															"nativeSrc": "7527:117:7",
															"nodeType": "YulBlock",
															"src": "7527:117:7",
															"statements": [
																{
																	"nativeSrc": "7542:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7542:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7556:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7556:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7546:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7546:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7571:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7571:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7606:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7606:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7617:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7617:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7602:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7602:3:7"
																				},
																				"nativeSrc": "7602:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7602:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7626:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7626:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7581:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7581:20:7"
																		},
																		"nativeSrc": "7581:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7581:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7571:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7571:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7654:118:7",
															"nodeType": "YulBlock",
															"src": "7654:118:7",
															"statements": [
																{
																	"nativeSrc": "7669:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7669:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7683:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7683:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7730:3:7"
																				},
																				"nativeSrc": "7730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7709:20:7"
																		},
																		"nativeSrc": "7709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7782:118:7",
															"nodeType": "YulBlock",
															"src": "7782:118:7",
															"statements": [
																{
																	"nativeSrc": "7797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7811:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7858:3:7"
																				},
																				"nativeSrc": "7858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7837:20:7"
																		},
																		"nativeSrc": "7837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7827:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7910:118:7",
															"nodeType": "YulBlock",
															"src": "7910:118:7",
															"statements": [
																{
																	"nativeSrc": "7925:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7925:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7939:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7939:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7929:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7929:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7955:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7955:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7990:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7990:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8001:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8001:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7986:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7986:3:7"
																				},
																				"nativeSrc": "7986:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7986:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8010:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8010:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7965:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7965:20:7"
																		},
																		"nativeSrc": "7965:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7965:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7955:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7955:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8038:119:7",
															"nodeType": "YulBlock",
															"src": "8038:119:7",
															"statements": [
																{
																	"nativeSrc": "8053:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8053:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8067:3:7",
																		"nodeType": "YulLiteral",
																		"src": "8067:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8057:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8057:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8084:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8084:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8119:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8119:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8130:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8130:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8115:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8115:3:7"
																				},
																				"nativeSrc": "8115:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8115:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8139:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8139:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8094:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8094:20:7"
																		},
																		"nativeSrc": "8094:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8094:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8084:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8084:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8167:119:7",
															"nodeType": "YulBlock",
															"src": "8167:119:7",
															"statements": [
																{
																	"nativeSrc": "8182:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8182:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8196:3:7",
																		"nodeType": "YulLiteral",
																		"src": "8196:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8186:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8186:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8213:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8213:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8248:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8248:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8259:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8259:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8244:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8244:3:7"
																				},
																				"nativeSrc": "8244:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8244:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8268:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8268:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8223:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8223:20:7"
																		},
																		"nativeSrc": "8223:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8223:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "8213:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8213:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8296:119:7",
															"nodeType": "YulBlock",
															"src": "8296:119:7",
															"statements": [
																{
																	"nativeSrc": "8311:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8311:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8325:3:7",
																		"nodeType": "YulLiteral",
																		"src": "8325:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8315:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8315:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8342:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8342:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8377:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8377:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8388:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8388:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8373:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8373:3:7"
																				},
																				"nativeSrc": "8373:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8373:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8397:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8397:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8352:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8352:20:7"
																		},
																		"nativeSrc": "8352:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8352:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "8342:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8342:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8425:119:7",
															"nodeType": "YulBlock",
															"src": "8425:119:7",
															"statements": [
																{
																	"nativeSrc": "8440:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8440:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8454:3:7",
																		"nodeType": "YulLiteral",
																		"src": "8454:3:7",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8444:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8444:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8471:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8471:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8506:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8506:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8517:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8517:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8502:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8502:3:7"
																				},
																				"nativeSrc": "8502:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8502:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8526:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8526:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8481:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8481:20:7"
																		},
																		"nativeSrc": "8481:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "8471:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8471:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "7202:1349:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7301:9:7",
														"nodeType": "YulTypedName",
														"src": "7301:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7312:7:7",
														"nodeType": "YulTypedName",
														"src": "7312:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7324:6:7",
														"nodeType": "YulTypedName",
														"src": "7324:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7332:6:7",
														"nodeType": "YulTypedName",
														"src": "7332:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7340:6:7",
														"nodeType": "YulTypedName",
														"src": "7340:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7348:6:7",
														"nodeType": "YulTypedName",
														"src": "7348:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7356:6:7",
														"nodeType": "YulTypedName",
														"src": "7356:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7364:6:7",
														"nodeType": "YulTypedName",
														"src": "7364:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7372:6:7",
														"nodeType": "YulTypedName",
														"src": "7372:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "7380:6:7",
														"nodeType": "YulTypedName",
														"src": "7380:6:7",
														"type": ""
													}
												],
												"src": "7202:1349:7"
											},
											{
												"body": {
													"nativeSrc": "8711:288:7",
													"nodeType": "YulBlock",
													"src": "8711:288:7",
													"statements": [
														{
															"nativeSrc": "8721:26:7",
															"nodeType": "YulAssignment",
															"src": "8721:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8733:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8733:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8744:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8729:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8729:3:7"
																},
																"nativeSrc": "8729:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8729:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8721:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8721:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8801:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8801:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8814:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8825:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8825:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8810:3:7"
																		},
																		"nativeSrc": "8810:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8810:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8757:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8757:43:7"
																},
																"nativeSrc": "8757:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8757:71:7"
															},
															"nativeSrc": "8757:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8757:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8882:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8895:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8895:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8906:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8891:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8891:3:7"
																		},
																		"nativeSrc": "8891:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8891:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8838:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8838:43:7"
																},
																"nativeSrc": "8838:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8838:72:7"
															},
															"nativeSrc": "8838:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8838:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8964:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8964:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8977:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8977:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8988:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8988:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8973:3:7"
																		},
																		"nativeSrc": "8973:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8973:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8920:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8920:43:7"
																},
																"nativeSrc": "8920:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8920:72:7"
															},
															"nativeSrc": "8920:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8920:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8557:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8667:9:7",
														"nodeType": "YulTypedName",
														"src": "8667:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8679:6:7",
														"nodeType": "YulTypedName",
														"src": "8679:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8687:6:7",
														"nodeType": "YulTypedName",
														"src": "8687:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8695:6:7",
														"nodeType": "YulTypedName",
														"src": "8695:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8706:4:7",
														"nodeType": "YulTypedName",
														"src": "8706:4:7",
														"type": ""
													}
												],
												"src": "8557:442:7"
											},
											{
												"body": {
													"nativeSrc": "9070:53:7",
													"nodeType": "YulBlock",
													"src": "9070:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9087:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9087:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9110:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9110:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9092:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9092:17:7"
																		},
																		"nativeSrc": "9092:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9092:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9080:6:7"
																},
																"nativeSrc": "9080:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9080:37:7"
															},
															"nativeSrc": "9080:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9080:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9005:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9058:5:7",
														"nodeType": "YulTypedName",
														"src": "9058:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9065:3:7",
														"nodeType": "YulTypedName",
														"src": "9065:3:7",
														"type": ""
													}
												],
												"src": "9005:118:7"
											},
											{
												"body": {
													"nativeSrc": "9227:124:7",
													"nodeType": "YulBlock",
													"src": "9227:124:7",
													"statements": [
														{
															"nativeSrc": "9237:26:7",
															"nodeType": "YulAssignment",
															"src": "9237:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9249:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9249:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9260:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9260:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9245:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9245:3:7"
																},
																"nativeSrc": "9245:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9245:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9237:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9237:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9317:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9317:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9330:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9330:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9341:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9341:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9326:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9326:3:7"
																		},
																		"nativeSrc": "9326:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9326:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9273:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9273:43:7"
																},
																"nativeSrc": "9273:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9273:71:7"
															},
															"nativeSrc": "9273:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9273:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9129:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9199:9:7",
														"nodeType": "YulTypedName",
														"src": "9199:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9211:6:7",
														"nodeType": "YulTypedName",
														"src": "9211:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9222:4:7",
														"nodeType": "YulTypedName",
														"src": "9222:4:7",
														"type": ""
													}
												],
												"src": "9129:222:7"
											},
											{
												"body": {
													"nativeSrc": "9440:391:7",
													"nodeType": "YulBlock",
													"src": "9440:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9486:83:7",
																"nodeType": "YulBlock",
																"src": "9486:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9488:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9488:77:7"
																			},
																			"nativeSrc": "9488:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9488:79:7"
																		},
																		"nativeSrc": "9488:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9488:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9461:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9461:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9470:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9470:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9457:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9457:3:7"
																		},
																		"nativeSrc": "9457:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9457:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9482:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9482:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9453:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9453:3:7"
																},
																"nativeSrc": "9453:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9453:32:7"
															},
															"nativeSrc": "9450:119:7",
															"nodeType": "YulIf",
															"src": "9450:119:7"
														},
														{
															"nativeSrc": "9579:117:7",
															"nodeType": "YulBlock",
															"src": "9579:117:7",
															"statements": [
																{
																	"nativeSrc": "9594:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9594:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9608:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9608:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9598:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9598:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9623:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9623:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9658:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9658:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9669:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9669:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9654:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9654:3:7"
																				},
																				"nativeSrc": "9654:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9654:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9678:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9678:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9633:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9633:20:7"
																		},
																		"nativeSrc": "9633:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9633:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9623:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9623:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9706:118:7",
															"nodeType": "YulBlock",
															"src": "9706:118:7",
															"statements": [
																{
																	"nativeSrc": "9721:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9721:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9735:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9735:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9725:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9725:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9751:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9751:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9786:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9786:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9797:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9797:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9782:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9782:3:7"
																				},
																				"nativeSrc": "9782:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9782:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9806:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9806:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9761:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9761:20:7"
																		},
																		"nativeSrc": "9761:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9761:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9751:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9751:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9357:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9402:9:7",
														"nodeType": "YulTypedName",
														"src": "9402:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9413:7:7",
														"nodeType": "YulTypedName",
														"src": "9413:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9425:6:7",
														"nodeType": "YulTypedName",
														"src": "9425:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9433:6:7",
														"nodeType": "YulTypedName",
														"src": "9433:6:7",
														"type": ""
													}
												],
												"src": "9357:474:7"
											},
											{
												"body": {
													"nativeSrc": "10005:1035:7",
													"nodeType": "YulBlock",
													"src": "10005:1035:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10052:83:7",
																"nodeType": "YulBlock",
																"src": "10052:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10054:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10054:77:7"
																			},
																			"nativeSrc": "10054:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10054:79:7"
																		},
																		"nativeSrc": "10054:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10054:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10026:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10026:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10035:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10035:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10022:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10022:3:7"
																		},
																		"nativeSrc": "10022:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10022:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10047:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10047:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10018:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10018:3:7"
																},
																"nativeSrc": "10018:33:7",
																"nodeType": "YulFunctionCall",
																"src": "10018:33:7"
															},
															"nativeSrc": "10015:120:7",
															"nodeType": "YulIf",
															"src": "10015:120:7"
														},
														{
															"nativeSrc": "10145:117:7",
															"nodeType": "YulBlock",
															"src": "10145:117:7",
															"statements": [
																{
																	"nativeSrc": "10160:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10160:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10174:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10174:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10164:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10164:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10189:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10189:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10224:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10224:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10235:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10235:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10220:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10220:3:7"
																				},
																				"nativeSrc": "10220:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10220:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10244:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10244:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10199:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10199:20:7"
																		},
																		"nativeSrc": "10199:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10199:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10189:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10189:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10272:118:7",
															"nodeType": "YulBlock",
															"src": "10272:118:7",
															"statements": [
																{
																	"nativeSrc": "10287:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10287:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10301:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10301:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10291:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10291:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10317:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10317:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10352:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10352:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10363:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10363:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10348:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10348:3:7"
																				},
																				"nativeSrc": "10348:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10348:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10372:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10372:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10327:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10327:20:7"
																		},
																		"nativeSrc": "10327:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10327:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10317:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10317:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10400:118:7",
															"nodeType": "YulBlock",
															"src": "10400:118:7",
															"statements": [
																{
																	"nativeSrc": "10415:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10415:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10429:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10429:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10419:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10419:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10445:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10445:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10480:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10480:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10491:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10491:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10476:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10476:3:7"
																				},
																				"nativeSrc": "10476:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10476:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10500:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10500:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10455:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10455:20:7"
																		},
																		"nativeSrc": "10455:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10455:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10445:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10445:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10528:118:7",
															"nodeType": "YulBlock",
															"src": "10528:118:7",
															"statements": [
																{
																	"nativeSrc": "10543:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10543:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10557:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10547:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10547:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10573:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10573:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10608:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10608:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10619:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10619:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10604:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10604:3:7"
																				},
																				"nativeSrc": "10604:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10604:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10628:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10628:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10583:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10583:20:7"
																		},
																		"nativeSrc": "10583:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10583:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10573:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10573:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10656:119:7",
															"nodeType": "YulBlock",
															"src": "10656:119:7",
															"statements": [
																{
																	"nativeSrc": "10671:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10671:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10685:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10685:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10675:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10675:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10702:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10702:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10737:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10737:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10748:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10748:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10733:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10733:3:7"
																				},
																				"nativeSrc": "10733:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10733:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10757:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10757:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10712:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10712:20:7"
																		},
																		"nativeSrc": "10712:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10712:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10702:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10702:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10785:119:7",
															"nodeType": "YulBlock",
															"src": "10785:119:7",
															"statements": [
																{
																	"nativeSrc": "10800:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10800:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10814:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10814:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10804:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10804:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10831:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10831:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10866:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10866:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10877:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10877:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10862:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10862:3:7"
																				},
																				"nativeSrc": "10862:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10862:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10886:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10886:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10841:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10841:20:7"
																		},
																		"nativeSrc": "10841:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10841:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10831:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10831:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10914:119:7",
															"nodeType": "YulBlock",
															"src": "10914:119:7",
															"statements": [
																{
																	"nativeSrc": "10929:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10929:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10943:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10943:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10933:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10933:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10960:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10960:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10995:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10995:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11006:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11006:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10991:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10991:3:7"
																				},
																				"nativeSrc": "10991:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10991:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11015:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11015:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10970:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10970:20:7"
																		},
																		"nativeSrc": "10970:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10970:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10960:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10960:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "9837:1203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9927:9:7",
														"nodeType": "YulTypedName",
														"src": "9927:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9938:7:7",
														"nodeType": "YulTypedName",
														"src": "9938:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9950:6:7",
														"nodeType": "YulTypedName",
														"src": "9950:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9958:6:7",
														"nodeType": "YulTypedName",
														"src": "9958:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9966:6:7",
														"nodeType": "YulTypedName",
														"src": "9966:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9974:6:7",
														"nodeType": "YulTypedName",
														"src": "9974:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9982:6:7",
														"nodeType": "YulTypedName",
														"src": "9982:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9990:6:7",
														"nodeType": "YulTypedName",
														"src": "9990:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9998:6:7",
														"nodeType": "YulTypedName",
														"src": "9998:6:7",
														"type": ""
													}
												],
												"src": "9837:1203:7"
											},
											{
												"body": {
													"nativeSrc": "11172:206:7",
													"nodeType": "YulBlock",
													"src": "11172:206:7",
													"statements": [
														{
															"nativeSrc": "11182:26:7",
															"nodeType": "YulAssignment",
															"src": "11182:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11194:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11194:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11205:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11205:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11190:3:7"
																},
																"nativeSrc": "11190:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11190:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11182:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11182:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11262:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11262:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11275:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11275:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11286:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11286:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11271:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11271:3:7"
																		},
																		"nativeSrc": "11271:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11271:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11218:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11218:43:7"
																},
																"nativeSrc": "11218:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11218:71:7"
															},
															"nativeSrc": "11218:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11218:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11343:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11343:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11356:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11356:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11367:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11367:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11352:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11352:3:7"
																		},
																		"nativeSrc": "11352:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11352:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11299:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11299:43:7"
																},
																"nativeSrc": "11299:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11299:72:7"
															},
															"nativeSrc": "11299:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11299:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11046:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11136:9:7",
														"nodeType": "YulTypedName",
														"src": "11136:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11148:6:7",
														"nodeType": "YulTypedName",
														"src": "11148:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11156:6:7",
														"nodeType": "YulTypedName",
														"src": "11156:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11167:4:7",
														"nodeType": "YulTypedName",
														"src": "11167:4:7",
														"type": ""
													}
												],
												"src": "11046:332:7"
											},
											{
												"body": {
													"nativeSrc": "11450:263:7",
													"nodeType": "YulBlock",
													"src": "11450:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11496:83:7",
																"nodeType": "YulBlock",
																"src": "11496:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11498:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "11498:77:7"
																			},
																			"nativeSrc": "11498:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11498:79:7"
																		},
																		"nativeSrc": "11498:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11498:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11471:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11471:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11480:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11480:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11467:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:7"
																		},
																		"nativeSrc": "11467:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11467:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11492:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11492:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11463:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11463:3:7"
																},
																"nativeSrc": "11463:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11463:32:7"
															},
															"nativeSrc": "11460:119:7",
															"nodeType": "YulIf",
															"src": "11460:119:7"
														},
														{
															"nativeSrc": "11589:117:7",
															"nodeType": "YulBlock",
															"src": "11589:117:7",
															"statements": [
																{
																	"nativeSrc": "11604:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11604:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11618:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11618:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11608:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11608:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11633:63:7",
																	"nodeType": "YulAssignment",
																	"src": "11633:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11668:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11668:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11679:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11679:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11664:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11664:3:7"
																				},
																				"nativeSrc": "11664:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11664:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11688:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11688:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11643:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "11643:20:7"
																		},
																		"nativeSrc": "11643:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11643:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11633:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11633:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "11384:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11420:9:7",
														"nodeType": "YulTypedName",
														"src": "11420:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11431:7:7",
														"nodeType": "YulTypedName",
														"src": "11431:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11443:6:7",
														"nodeType": "YulTypedName",
														"src": "11443:6:7",
														"type": ""
													}
												],
												"src": "11384:329:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$799_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$799_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061009c575f3560e01c80638da5cb5b116100645780638da5cb5b1461015a578063ac41865a14610178578063baa2abde146101a8578063d21220a7146101d9578063f2fde38b146101f75761009c565b8063054d50d4146100a057806325be124e146100d057806338ed1739146100ee5780633de2d6811461011e578063715018a614610150575b5f5ffd5b6100ba60048036038101906100b591906104df565b610213565b6040516100c7919061053e565b60405180910390f35b6100d861021b565b6040516100e591906105d1565b60405180910390f35b61010860048036038101906101039190610686565b610240565b60405161011591906107d3565b60405180910390f35b610138600480360381019061013391906107f3565b61024c565b604051610147939291906108a4565b60405180910390f35b61015861025d565b005b610162610270565b60405161016f91906108e8565b60405180910390f35b610192600480360381019061018d9190610901565b610297565b60405161019f919061053e565b60405180910390f35b6101c260048036038101906101bd919061093f565b61029e565b6040516101d09291906109dc565b60405180910390f35b6101e16102ac565b6040516101ee91906105d1565b60405180910390f35b610211600480360381019061020c9190610a03565b6102d1565b005b5f9392505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60609695505050505050565b5f5f5f985098509895505050505050565b610265610355565b61026e5f6103dc565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f92915050565b5f5f97509795505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102d9610355565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610349575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161034091906108e8565b60405180910390fd5b610352816103dc565b50565b61035d61049d565b73ffffffffffffffffffffffffffffffffffffffff1661037b610270565b73ffffffffffffffffffffffffffffffffffffffff16146103da5761039e61049d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103d191906108e8565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f5ffd5b5f819050919050565b6104be816104ac565b81146104c8575f5ffd5b50565b5f813590506104d9816104b5565b92915050565b5f5f5f606084860312156104f6576104f56104a4565b5b5f610503868287016104cb565b9350506020610514868287016104cb565b9250506040610525868287016104cb565b9150509250925092565b610538816104ac565b82525050565b5f6020820190506105515f83018461052f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61059961059461058f84610557565b610576565b610557565b9050919050565b5f6105aa8261057f565b9050919050565b5f6105bb826105a0565b9050919050565b6105cb816105b1565b82525050565b5f6020820190506105e45f8301846105c2565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261060b5761060a6105ea565b5b8235905067ffffffffffffffff811115610628576106276105ee565b5b602083019150836020820283011115610644576106436105f2565b5b9250929050565b5f61065582610557565b9050919050565b6106658161064b565b811461066f575f5ffd5b50565b5f813590506106808161065c565b92915050565b5f5f5f5f5f5f60a087890312156106a05761069f6104a4565b5b5f6106ad89828a016104cb565b96505060206106be89828a016104cb565b955050604087013567ffffffffffffffff8111156106df576106de6104a8565b5b6106eb89828a016105f6565b945094505060606106fe89828a01610672565b925050608061070f89828a016104cb565b9150509295509295509295565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61074e816104ac565b82525050565b5f61075f8383610745565b60208301905092915050565b5f602082019050919050565b5f6107818261071c565b61078b8185610726565b935061079683610736565b805f5b838110156107c65781516107ad8882610754565b97506107b88361076b565b925050600181019050610799565b5085935050505092915050565b5f6020820190508181035f8301526107eb8184610777565b905092915050565b5f5f5f5f5f5f5f5f610100898b0312156108105761080f6104a4565b5b5f61081d8b828c01610672565b985050602061082e8b828c01610672565b975050604061083f8b828c016104cb565b96505060606108508b828c016104cb565b95505060806108618b828c016104cb565b94505060a06108728b828c016104cb565b93505060c06108838b828c01610672565b92505060e06108948b828c016104cb565b9150509295985092959890939650565b5f6060820190506108b75f83018661052f565b6108c4602083018561052f565b6108d1604083018461052f565b949350505050565b6108e28161064b565b82525050565b5f6020820190506108fb5f8301846108d9565b92915050565b5f5f60408385031215610917576109166104a4565b5b5f61092485828601610672565b925050602061093585828601610672565b9150509250929050565b5f5f5f5f5f5f5f60e0888a03121561095a576109596104a4565b5b5f6109678a828b01610672565b97505060206109788a828b01610672565b96505060406109898a828b016104cb565b955050606061099a8a828b016104cb565b94505060806109ab8a828b016104cb565b93505060a06109bc8a828b01610672565b92505060c06109cd8a828b016104cb565b91505092959891949750929550565b5f6040820190506109ef5f83018561052f565b6109fc602083018461052f565b9392505050565b5f60208284031215610a1857610a176104a4565b5b5f610a2584828501610672565b9150509291505056fea26469706673582212208dc22bc82d66597160ac9ebedcd8c4597d0290ae72383d9bc073b661fafcd6ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x25BE124E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x3DE2D681 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x25D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x901 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP3 SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x265 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x26E PUSH0 PUSH2 0x3DC JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x355 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x349 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x3DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x35D PUSH2 0x49D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37B PUSH2 0x270 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3DA JUMPI PUSH2 0x39E PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BE DUP2 PUSH2 0x4AC JUMP JUMPDEST DUP2 EQ PUSH2 0x4C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D9 DUP2 PUSH2 0x4B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x503 DUP7 DUP3 DUP8 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x514 DUP7 DUP3 DUP8 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x525 DUP7 DUP3 DUP8 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x538 DUP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x551 PUSH0 DUP4 ADD DUP5 PUSH2 0x52F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x599 PUSH2 0x594 PUSH2 0x58F DUP5 PUSH2 0x557 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5AA DUP3 PUSH2 0x57F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB DUP3 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CB DUP2 PUSH2 0x5B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x5EA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x628 JUMPI PUSH2 0x627 PUSH2 0x5EE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x644 JUMPI PUSH2 0x643 PUSH2 0x5F2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x655 DUP3 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x665 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP2 EQ PUSH2 0x66F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0x65C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6A0 JUMPI PUSH2 0x69F PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6AD DUP10 DUP3 DUP11 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6BE DUP10 DUP3 DUP11 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST PUSH2 0x6EB DUP10 DUP3 DUP11 ADD PUSH2 0x5F6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x6FE DUP10 DUP3 DUP11 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x70F DUP10 DUP3 DUP11 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75F DUP4 DUP4 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x781 DUP3 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x78B DUP2 DUP6 PUSH2 0x726 JUMP JUMPDEST SWAP4 POP PUSH2 0x796 DUP4 PUSH2 0x736 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7C6 JUMPI DUP2 MLOAD PUSH2 0x7AD DUP9 DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP8 POP PUSH2 0x7B8 DUP4 PUSH2 0x76B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x799 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7EB DUP2 DUP5 PUSH2 0x777 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x81D DUP12 DUP3 DUP13 ADD PUSH2 0x672 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x82E DUP12 DUP3 DUP13 ADD PUSH2 0x672 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x83F DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x850 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x861 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x872 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x883 DUP12 DUP3 DUP13 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x894 DUP12 DUP3 DUP13 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x8C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x8D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x52F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8E2 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8FB PUSH0 DUP4 ADD DUP5 PUSH2 0x8D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x917 JUMPI PUSH2 0x916 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x924 DUP6 DUP3 DUP7 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x935 DUP6 DUP3 DUP7 ADD PUSH2 0x672 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x95A JUMPI PUSH2 0x959 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x967 DUP11 DUP3 DUP12 ADD PUSH2 0x672 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x978 DUP11 DUP3 DUP12 ADD PUSH2 0x672 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x989 DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x99A DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x9AB DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x9BC DUP11 DUP3 DUP12 ADD PUSH2 0x672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x9CD DUP11 DUP3 DUP12 ADD PUSH2 0x4CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9EF PUSH0 DUP4 ADD DUP6 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x9FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x52F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA17 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA25 DUP5 DUP3 DUP6 ADD PUSH2 0x672 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xC2 0x2B 0xC8 0x2D PUSH7 0x597160AC9EBEDC 0xD8 0xC4 MSIZE PUSH30 0x290AE72383D9BC073B661FAFCD6CA64736F6C634300081E003300000000 ",
							"sourceMap": "344:1495:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;410:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1301:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:328;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1527:139:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:252;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;384:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1686:140:6;1801:14;1686:140;;;;;:::o;410:19::-;;;;;;;;;;;;;:::o;1301:206::-;1473:21;1301:206;;;;;;;;:::o;681:328::-;942:12;956;970:14;681:328;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1527:139:6:-;1618:10;1527:139;;;;:::o;1029:252::-;1238:12;1252;1029:252;;;;;;;;;;:::o;384:19::-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;88:117:7:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:126::-;1704:7;1744:42;1737:5;1733:54;1722:65;;1667:126;;;:::o;1799:60::-;1827:3;1848:5;1841:12;;1799:60;;;:::o;1865:142::-;1915:9;1948:53;1966:34;1975:24;1993:5;1975:24;:::i;:::-;1966:34;:::i;:::-;1948:53;:::i;:::-;1935:66;;1865:142;;;:::o;2013:126::-;2063:9;2096:37;2127:5;2096:37;:::i;:::-;2083:50;;2013:126;;;:::o;2145:139::-;2208:9;2241:37;2272:5;2241:37;:::i;:::-;2228:50;;2145:139;;;:::o;2290:157::-;2390:50;2434:5;2390:50;:::i;:::-;2385:3;2378:63;2290:157;;:::o;2453:248::-;2559:4;2597:2;2586:9;2582:18;2574:26;;2610:84;2691:1;2680:9;2676:17;2667:6;2610:84;:::i;:::-;2453:248;;;;:::o;2707:117::-;2816:1;2813;2806:12;2830:117;2939:1;2936;2929:12;2953:117;3062:1;3059;3052:12;3093:568;3166:8;3176:6;3226:3;3219:4;3211:6;3207:17;3203:27;3193:122;;3234:79;;:::i;:::-;3193:122;3347:6;3334:20;3324:30;;3377:18;3369:6;3366:30;3363:117;;;3399:79;;:::i;:::-;3363:117;3513:4;3505:6;3501:17;3489:29;;3567:3;3559:4;3551:6;3547:17;3537:8;3533:32;3530:41;3527:128;;;3574:79;;:::i;:::-;3527:128;3093:568;;;;;:::o;3667:96::-;3704:7;3733:24;3751:5;3733:24;:::i;:::-;3722:35;;3667:96;;;:::o;3769:122::-;3842:24;3860:5;3842:24;:::i;:::-;3835:5;3832:35;3822:63;;3881:1;3878;3871:12;3822:63;3769:122;:::o;3897:139::-;3943:5;3981:6;3968:20;3959:29;;3997:33;4024:5;3997:33;:::i;:::-;3897:139;;;;:::o;4042:1141::-;4164:6;4172;4180;4188;4196;4204;4253:3;4241:9;4232:7;4228:23;4224:33;4221:120;;;4260:79;;:::i;:::-;4221:120;4380:1;4405:53;4450:7;4441:6;4430:9;4426:22;4405:53;:::i;:::-;4395:63;;4351:117;4507:2;4533:53;4578:7;4569:6;4558:9;4554:22;4533:53;:::i;:::-;4523:63;;4478:118;4663:2;4652:9;4648:18;4635:32;4694:18;4686:6;4683:30;4680:117;;;4716:79;;:::i;:::-;4680:117;4829:80;4901:7;4892:6;4881:9;4877:22;4829:80;:::i;:::-;4811:98;;;;4606:313;4958:2;4984:53;5029:7;5020:6;5009:9;5005:22;4984:53;:::i;:::-;4974:63;;4929:118;5086:3;5113:53;5158:7;5149:6;5138:9;5134:22;5113:53;:::i;:::-;5103:63;;5057:119;4042:1141;;;;;;;;:::o;5189:114::-;5256:6;5290:5;5284:12;5274:22;;5189:114;;;:::o;5309:184::-;5408:11;5442:6;5437:3;5430:19;5482:4;5477:3;5473:14;5458:29;;5309:184;;;;:::o;5499:132::-;5566:4;5589:3;5581:11;;5619:4;5614:3;5610:14;5602:22;;5499:132;;;:::o;5637:108::-;5714:24;5732:5;5714:24;:::i;:::-;5709:3;5702:37;5637:108;;:::o;5751:179::-;5820:10;5841:46;5883:3;5875:6;5841:46;:::i;:::-;5919:4;5914:3;5910:14;5896:28;;5751:179;;;;:::o;5936:113::-;6006:4;6038;6033:3;6029:14;6021:22;;5936:113;;;:::o;6085:732::-;6204:3;6233:54;6281:5;6233:54;:::i;:::-;6303:86;6382:6;6377:3;6303:86;:::i;:::-;6296:93;;6413:56;6463:5;6413:56;:::i;:::-;6492:7;6523:1;6508:284;6533:6;6530:1;6527:13;6508:284;;;6609:6;6603:13;6636:63;6695:3;6680:13;6636:63;:::i;:::-;6629:70;;6722:60;6775:6;6722:60;:::i;:::-;6712:70;;6568:224;6555:1;6552;6548:9;6543:14;;6508:284;;;6512:14;6808:3;6801:10;;6209:608;;;6085:732;;;;:::o;6823:373::-;6966:4;7004:2;6993:9;6989:18;6981:26;;7053:9;7047:4;7043:20;7039:1;7028:9;7024:17;7017:47;7081:108;7184:4;7175:6;7081:108;:::i;:::-;7073:116;;6823:373;;;;:::o;7202:1349::-;7324:6;7332;7340;7348;7356;7364;7372;7380;7429:3;7417:9;7408:7;7404:23;7400:33;7397:120;;;7436:79;;:::i;:::-;7397:120;7556:1;7581:53;7626:7;7617:6;7606:9;7602:22;7581:53;:::i;:::-;7571:63;;7527:117;7683:2;7709:53;7754:7;7745:6;7734:9;7730:22;7709:53;:::i;:::-;7699:63;;7654:118;7811:2;7837:53;7882:7;7873:6;7862:9;7858:22;7837:53;:::i;:::-;7827:63;;7782:118;7939:2;7965:53;8010:7;8001:6;7990:9;7986:22;7965:53;:::i;:::-;7955:63;;7910:118;8067:3;8094:53;8139:7;8130:6;8119:9;8115:22;8094:53;:::i;:::-;8084:63;;8038:119;8196:3;8223:53;8268:7;8259:6;8248:9;8244:22;8223:53;:::i;:::-;8213:63;;8167:119;8325:3;8352:53;8397:7;8388:6;8377:9;8373:22;8352:53;:::i;:::-;8342:63;;8296:119;8454:3;8481:53;8526:7;8517:6;8506:9;8502:22;8481:53;:::i;:::-;8471:63;;8425:119;7202:1349;;;;;;;;;;;:::o;8557:442::-;8706:4;8744:2;8733:9;8729:18;8721:26;;8757:71;8825:1;8814:9;8810:17;8801:6;8757:71;:::i;:::-;8838:72;8906:2;8895:9;8891:18;8882:6;8838:72;:::i;:::-;8920;8988:2;8977:9;8973:18;8964:6;8920:72;:::i;:::-;8557:442;;;;;;:::o;9005:118::-;9092:24;9110:5;9092:24;:::i;:::-;9087:3;9080:37;9005:118;;:::o;9129:222::-;9222:4;9260:2;9249:9;9245:18;9237:26;;9273:71;9341:1;9330:9;9326:17;9317:6;9273:71;:::i;:::-;9129:222;;;;:::o;9357:474::-;9425:6;9433;9482:2;9470:9;9461:7;9457:23;9453:32;9450:119;;;9488:79;;:::i;:::-;9450:119;9608:1;9633:53;9678:7;9669:6;9658:9;9654:22;9633:53;:::i;:::-;9623:63;;9579:117;9735:2;9761:53;9806:7;9797:6;9786:9;9782:22;9761:53;:::i;:::-;9751:63;;9706:118;9357:474;;;;;:::o;9837:1203::-;9950:6;9958;9966;9974;9982;9990;9998;10047:3;10035:9;10026:7;10022:23;10018:33;10015:120;;;10054:79;;:::i;:::-;10015:120;10174:1;10199:53;10244:7;10235:6;10224:9;10220:22;10199:53;:::i;:::-;10189:63;;10145:117;10301:2;10327:53;10372:7;10363:6;10352:9;10348:22;10327:53;:::i;:::-;10317:63;;10272:118;10429:2;10455:53;10500:7;10491:6;10480:9;10476:22;10455:53;:::i;:::-;10445:63;;10400:118;10557:2;10583:53;10628:7;10619:6;10608:9;10604:22;10583:53;:::i;:::-;10573:63;;10528:118;10685:3;10712:53;10757:7;10748:6;10737:9;10733:22;10712:53;:::i;:::-;10702:63;;10656:119;10814:3;10841:53;10886:7;10877:6;10866:9;10862:22;10841:53;:::i;:::-;10831:63;;10785:119;10943:3;10970:53;11015:7;11006:6;10995:9;10991:22;10970:53;:::i;:::-;10960:63;;10914:119;9837:1203;;;;;;;;;;:::o;11046:332::-;11167:4;11205:2;11194:9;11190:18;11182:26;;11218:71;11286:1;11275:9;11271:17;11262:6;11218:71;:::i;:::-;11299:72;11367:2;11356:9;11352:18;11343:6;11299:72;:::i;:::-;11046:332;;;;;:::o;11384:329::-;11443:6;11492:2;11480:9;11471:7;11467:23;11463:32;11460:119;;;11498:79;;:::i;:::-;11460:119;11618:1;11643:53;11688:7;11679:6;11668:9;11664:22;11643:53;:::i;:::-;11633:63;;11589:117;11384:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "532000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidityaddLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getPrice(address,address)": "infinite",
								"owner()": "2514",
								"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "infinite",
								"token1()": "infinite",
								"token2()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 1839,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 470,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 470,
									"end": 615,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 524,
									"end": 534,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 562,
									"end": 569,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 547,
									"end": 553,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 547,
									"end": 553,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 547,
									"end": 570,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 596,
									"end": 603,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 581,
									"end": 587,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 581,
									"end": 587,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 581,
									"end": 604,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 470,
									"end": 615,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 1839,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208dc22bc82d66597160ac9ebedcd8c4597d0290ae72383d9bc073b661fafcd6ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "AC41865A"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "BAA2ABDE"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "D21220A7"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "54D50D4"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "25BE124E"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "38ED1739"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "3DE2D681"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1839,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1686,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1686,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1686,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1301,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1301,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1301,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 681,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 681,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 681,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1527,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1527,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1527,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1029,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1029,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1029,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 384,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 384,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 410,
											"end": 429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 942,
											"end": 954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 1009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 384,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1402,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1793,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1667,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1786,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1859,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1799,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1865,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1966,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1993,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1975,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1966,
											"end": 2000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 2000,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1966,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1948,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 2001,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1948,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 2007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 2007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 2007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 2007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2139,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2013,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2096,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2284,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2145,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2272,
											"end": 2277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2241,
											"end": 2278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2278,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2241,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2284,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2290,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2434,
											"end": 2439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2390,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2440,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2390,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2701,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2453,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2691,
											"end": 2692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2610,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2694,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2610,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2701,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2824,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2707,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2947,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2830,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 3070,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2953,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3661,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3093,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3229,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3230,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3193,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3193,
											"end": 3315,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3234,
											"end": 3313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3193,
											"end": 3315,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3193,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3354,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3396,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3480,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3363,
											"end": 3480,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3399,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3399,
											"end": 3478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3478,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3399,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3480,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3363,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3570,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3564,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3571,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3655,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3527,
											"end": 3655,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3574,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3655,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3527,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3763,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3667,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3733,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3757,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3891,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3769,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3860,
											"end": 3865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3842,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3866,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3842,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3822,
											"end": 3885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3883,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3885,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3822,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4036,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3897,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3968,
											"end": 3988,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3988,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4024,
											"end": 4029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3997,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4036,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4256,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4239,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4257,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4341,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4221,
											"end": 4341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4260,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4260,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4260,
											"end": 4339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4260,
											"end": 4339,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4260,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4341,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4221,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4405,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4458,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4405,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4458,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4533,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4586,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4533,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4586,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4665,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4686,
											"end": 4692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4683,
											"end": 4713,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4716,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4716,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4795,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4716,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4901,
											"end": 4908,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4892,
											"end": 4898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4881,
											"end": 4890,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4829,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4829,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4909,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4909,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4606,
											"end": 4919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5029,
											"end": 5036,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5018,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4984,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5037,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5113,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5147,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5113,
											"end": 5166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5166,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5113,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 5183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5303,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5189,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5296,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5493,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5309,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5631,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5499,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5732,
											"end": 5737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5714,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5702,
											"end": 5739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5930,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5751,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5883,
											"end": 5886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5841,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5887,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5841,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5923,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5910,
											"end": 5924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5930,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 6049,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5936,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6042,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6033,
											"end": 6036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6029,
											"end": 6043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 6049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 6049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 6049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 6049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6817,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6085,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6281,
											"end": 6286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6233,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6287,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6233,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6377,
											"end": 6380,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6303,
											"end": 6389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6389,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6303,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6389,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6463,
											"end": 6468,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6413,
											"end": 6469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6469,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6413,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6499,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6540,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6616,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6680,
											"end": 6693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 6636,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6699,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 6636,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6699,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6722,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 6775,
											"end": 6781,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6722,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 6722,
											"end": 6782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6722,
											"end": 6782,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 6722,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6568,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6556,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 6508,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6811,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6811,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6817,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7196,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6823,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 6970,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6993,
											"end": 7002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7053,
											"end": 7062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7037,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7184,
											"end": 7188,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7175,
											"end": 7181,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 7081,
											"end": 7189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7189,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7081,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7196,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7332,
											"end": 7338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7340,
											"end": 7346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7364,
											"end": 7370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 7432,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7415,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7427,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7433,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7397,
											"end": 7517,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7436,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7436,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7515,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7436,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7517,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7397,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7626,
											"end": 7633,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7615,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 7581,
											"end": 7634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7634,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7581,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7634,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7685,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7709,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7754,
											"end": 7761,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 7745,
											"end": 7751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7743,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 7709,
											"end": 7762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7762,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7709,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7762,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7882,
											"end": 7889,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7871,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 7858,
											"end": 7880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7837,
											"end": 7890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7827,
											"end": 7890,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7827,
											"end": 7890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8010,
											"end": 8017,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8007,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 7999,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7965,
											"end": 8018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7955,
											"end": 8018,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 7955,
											"end": 8018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 8028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8067,
											"end": 8070,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 8139,
											"end": 8146,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8128,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 8094,
											"end": 8147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8147,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 8268,
											"end": 8275,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8265,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 8223,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 8276,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 8276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 8397,
											"end": 8404,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8386,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 8373,
											"end": 8395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 8352,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8454,
											"end": 8457,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 8526,
											"end": 8533,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8515,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 8502,
											"end": 8524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 8481,
											"end": 8534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 8551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8746,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8825,
											"end": 8826,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8807,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8757,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8828,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8757,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8906,
											"end": 8908,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8895,
											"end": 8904,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8882,
											"end": 8888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8838,
											"end": 8910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8910,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8838,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8920,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8988,
											"end": 8990,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8977,
											"end": 8986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 8970,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8920,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8920,
											"end": 8992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8920,
											"end": 8992,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8920,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9123,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 9005,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 9110,
											"end": 9115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 9092,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9116,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 9092,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9087,
											"end": 9090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9351,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 9129,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9237,
											"end": 9263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9237,
											"end": 9263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9339,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9326,
											"end": 9343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9323,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 9273,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9344,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 9273,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9831,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9357,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9439,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9484,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9470,
											"end": 9479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9461,
											"end": 9468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9480,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9485,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9450,
											"end": 9569,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9488,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 9488,
											"end": 9567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9567,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9488,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9569,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9450,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 9678,
											"end": 9685,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9658,
											"end": 9667,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 9633,
											"end": 9686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9686,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 9633,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9623,
											"end": 9686,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9623,
											"end": 9686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9735,
											"end": 9737,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9761,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 9806,
											"end": 9813,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9797,
											"end": 9803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9786,
											"end": 9795,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 9761,
											"end": 9814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9814,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 9761,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9751,
											"end": 9814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9751,
											"end": 9814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9706,
											"end": 9824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9966,
											"end": 9972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9974,
											"end": 9980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9982,
											"end": 9988,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9990,
											"end": 9996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9998,
											"end": 10004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10035,
											"end": 10044,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10026,
											"end": 10033,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10045,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10051,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10135,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 10015,
											"end": 10135,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 10054,
											"end": 10133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10135,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 10015,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 10244,
											"end": 10251,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10224,
											"end": 10233,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10220,
											"end": 10242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 10199,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10252,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10145,
											"end": 10262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10327,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 10372,
											"end": 10379,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10361,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10348,
											"end": 10370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10327,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 10327,
											"end": 10380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10327,
											"end": 10380,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 10327,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10380,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10272,
											"end": 10390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10429,
											"end": 10431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 10500,
											"end": 10507,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 10491,
											"end": 10497,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10489,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10476,
											"end": 10498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 10455,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10508,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10400,
											"end": 10518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10559,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10583,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 10628,
											"end": 10635,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 10619,
											"end": 10625,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10608,
											"end": 10617,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 10583,
											"end": 10636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10636,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 10583,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10573,
											"end": 10636,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10573,
											"end": 10636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10528,
											"end": 10646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10685,
											"end": 10688,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10712,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 10757,
											"end": 10764,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 10748,
											"end": 10754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10737,
											"end": 10746,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10733,
											"end": 10755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10712,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 10712,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10712,
											"end": 10765,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 10712,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10702,
											"end": 10765,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10702,
											"end": 10765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10814,
											"end": 10817,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 10877,
											"end": 10883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10862,
											"end": 10884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 10841,
											"end": 10894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10831,
											"end": 10894,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10831,
											"end": 10894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10785,
											"end": 10904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10943,
											"end": 10946,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 10970,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 11015,
											"end": 11022,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10995,
											"end": 11004,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10970,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 10970,
											"end": 11023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10970,
											"end": 11023,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10970,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10960,
											"end": 11023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10960,
											"end": 11023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10914,
											"end": 11033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 11040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11378,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 11046,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11194,
											"end": 11203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 11286,
											"end": 11287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11284,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11262,
											"end": 11268,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 11218,
											"end": 11289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11289,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 11218,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11299,
											"end": 11371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 11367,
											"end": 11369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11343,
											"end": 11349,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11299,
											"end": 11371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 11299,
											"end": 11371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11299,
											"end": 11371,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 11299,
											"end": 11371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11378,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11713,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 11384,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11492,
											"end": 11494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11471,
											"end": 11478,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11467,
											"end": 11490,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11463,
											"end": 11495,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11460,
											"end": 11579,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11460,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 11460,
											"end": 11579,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11498,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 11498,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 11498,
											"end": 11577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11498,
											"end": 11577,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 11498,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11460,
											"end": 11579,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 11460,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11643,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11688,
											"end": 11695,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11679,
											"end": 11685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11668,
											"end": 11677,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11664,
											"end": 11686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11643,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 11643,
											"end": 11696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11643,
											"end": 11696,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11643,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11633,
											"end": 11696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11633,
											"end": 11696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 11706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11713,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidityaddLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "3de2d681",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getPrice(address,address)": "ac41865a",
							"owner()": "8da5cb5b",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"renounceOwnership()": "715018a6",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"token1()": "d21220a7",
							"token2()": "25be124e",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token2\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityaddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token2\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0x22a01621113d8cbb9190918b8da5e05bf01cecfee2cf82d4a193e5a6c9d92655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb5f707963593a6c7042b5f9bbb9978f1e8480217732df53a153ce7bea978335\",\"dweb:/ipfs/QmaUjMM34C5XFzcnr8o7AvkPGHe5gAfr8AeSUBBJ1htW4o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/SimpleSwap.sol:SimpleSwap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 954,
								"contract": "contracts/SimpleSwap.sol:SimpleSwap",
								"label": "token1",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)799"
							},
							{
								"astId": 957,
								"contract": "contracts/SimpleSwap.sol:SimpleSwap",
								"label": "token2",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ERC20)799"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)799": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleSwap.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"MintableERC20": [
							949
						],
						"Ownable": [
							147
						],
						"SimpleSwap": [
							1070
						]
					},
					"id": 1071,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1071,
							"sourceUnit": 800,
							"src": "61:68:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "69:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1071,
							"sourceUnit": 878,
							"src": "131:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1071,
							"sourceUnit": 148,
							"src": "189:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "IERC20",
										"nameLocations": [
											"272:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "272:6:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "272:6:6"
								}
							],
							"canonicalName": "MintableERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "MintableERC20",
							"nameLocation": "255:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "295:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "308:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "300:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "320:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "312:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:28:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:0:6"
									},
									"scope": 949,
									"src": "286:51:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1071,
							"src": "245:95:6",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 950,
										"name": "Ownable",
										"nameLocations": [
											"367:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "367:7:6"
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "367:7:6"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1070,
							"linearizedBaseContracts": [
								1070,
								147,
								933
							],
							"name": "SimpleSwap",
							"nameLocation": "353:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 954,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "397:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1070,
									"src": "384:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 953,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 952,
											"name": "ERC20",
											"nameLocations": [
												"384:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "384:5:6"
										},
										"referencedDeclaration": 799,
										"src": "384:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "25be124e",
									"id": 957,
									"mutability": "mutable",
									"name": "token2",
									"nameLocation": "423:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1070,
									"src": "410:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 956,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 955,
											"name": "ERC20",
											"nameLocations": [
												"410:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "410:5:6"
										},
										"referencedDeclaration": 799,
										"src": "410:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "536:79:6",
										"statements": [
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "547:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 970,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "562:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 969,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "556:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "556:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "547:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "547:23:6"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "token2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "581:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 976,
																"name": "_token2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "596:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 975,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "590:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "590:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "581:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "581:23:6"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 964,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "524:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "528:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "524:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 966,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 963,
												"name": "Ownable",
												"nameLocations": [
													"516:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "516:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "516:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "490:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "482:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "_token2",
												"nameLocation": "507:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "499:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:34:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "536:0:6"
									},
									"scope": 1070,
									"src": "470:145:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "985:24:6",
										"statements": []
									},
									"functionSelector": "3de2d681",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityaddLiquidity",
									"nameLocation": "690:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "723:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "715:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "739:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "731:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "752:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "747:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "747:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "773:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "768:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "768:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "834:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "829:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "851:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "846:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "871:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "863:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "880:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "875:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:175:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "947:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "942:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "942:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "961:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "956:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "956:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "975:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "970:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "970:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:44:6"
									},
									"scope": 1070,
									"src": "681:328:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1265:16:6",
										"statements": []
									},
									"functionSelector": "baa2abde",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "1038:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1062:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1054:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1078:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1070:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1091:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1086:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1086:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1138:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1133:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1133:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1155:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1150:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1150:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1175:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1167:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1184:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1179:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1179:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:140:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1243:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1238:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1238:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1257:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1252:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1252:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:28:6"
									},
									"scope": 1070,
									"src": "1029:252:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "1495:12:6",
										"statements": []
									},
									"functionSelector": "38ed1739",
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1310:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1340:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1335:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1335:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1355:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1350:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1350:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1388:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1369:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1034,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1369:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1035,
													"nodeType": "ArrayTypeName",
													"src": "1369:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1402:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1394:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1411:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1406:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1406:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:86:6"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1487:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1473:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1042,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1473:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1043,
													"nodeType": "ArrayTypeName",
													"src": "1473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:23:6"
									},
									"scope": 1070,
									"src": "1301:206:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1629:37:6",
										"statements": []
									},
									"functionSelector": "ac41865a",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "1536:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1553:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1569:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1561:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1544:32:6"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1623:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1618:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1618:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:12:6"
									},
									"scope": 1070,
									"src": "1527:139:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "1816:10:6",
										"statements": []
									},
									"functionSelector": "054d50d4",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1695:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1713:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1708:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1708:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1728:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1723:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1744:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1739:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:48:6"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1806:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1801:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1801:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:16:6"
									},
									"scope": 1070,
									"src": "1686:140:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1071,
							"src": "344:1495:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:1806:6"
				},
				"id": 6
			}
		}
	}
}